P ::= @DPG0 || @Edge_to_Function || @Looping_Scheduler
DPG0 ::= ch_trig!1; (out_tri := 1; wait(0.02); ch_trig!out_tri; out_tri := 0; wait(1.98); ch_trig!out_tri)**
Edge_to_Function ::= a_S1 := 0; wait(2); ch_trig?osig; (ch_trig?out_tri; osig < 0 && out_tri >= 0 || osig <= 0 && out_tri > 0 -> (a_S1 == 0 -> (a_S1 := 1; tri!"call"; osig := out_tri; wait(2); ch_trig?out_tri); skip); osig := out_tri; wait(2); "true" == "true" -> a_S1 := 0)**
Looping_Scheduler ::= i := 0; y := 0; a_S1 := 0; wait(0.1); (tri_event := ""; tri?tri_event; tri_event != "" -> (a_S1 == 0 -> (a_S1 := 1; i := 1); done := 0; done == 0 -> if done == 0 && i <= 10 then (if done == 0 && i <= 10 then y := y+1; i := i+1 else skip endif; skip){done == 0 && i <= 10}** elif done == 0 then skip else skip endif); "true" == "true" -> a_S1 := 0)**
