%type: module

module order_ctrl():
begin
  (
    start_DDS_Writer!;
    end_DDS_Writer!;
    start_Chart!;
    end_Chart!
  )**
end
endmodule
module Chart():
procedure during_Chart_model_RTPS_Writer_Writer_repair_repairing begin
  Chart_model_RTPS_Writer_Writer_repair_repairing_done := 0;
  cansend == 1 && repair_num[id - 1] <= request_num[id - 1] -> (
    sn := repair_num[id - 1];
    i := 1;
    @J47;
    i := repair_num[id - 1];
    J462_done := 0;
    i == 1 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_try" then
        @during_Chart_model_channel_channel_1_try
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_1" then
        @during_Chart_model_channel_channel_1_delay_1
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_2" then
        @during_Chart_model_channel_channel_1_delay_2
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_next" then
        @during_Chart_model_channel_channel_1_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 && i == 2 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_try" then
        @during_Chart_model_channel_channel_2_try
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_1" then
        @during_Chart_model_channel_channel_2_delay_1
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_2" then
        @during_Chart_model_channel_channel_2_delay_2
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_next" then
        @during_Chart_model_channel_channel_2_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 && i == 3 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_try" then
        @during_Chart_model_channel_channel_3_try
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_1" then
        @during_Chart_model_channel_channel_3_delay_1
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_2" then
        @during_Chart_model_channel_channel_3_delay_2
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_next" then
        @during_Chart_model_channel_channel_3_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 && i == 4 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_try" then
        @during_Chart_model_channel_channel_4_try
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_1" then
        @during_Chart_model_channel_channel_4_delay_1
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_2" then
        @during_Chart_model_channel_channel_4_delay_2
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_next" then
        @during_Chart_model_channel_channel_4_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_try" then
        @during_Chart_model_channel_channel_5_try
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_1" then
        @during_Chart_model_channel_channel_5_delay_1
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_2" then
        @during_Chart_model_channel_channel_5_delay_2
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_next" then
        @during_Chart_model_channel_channel_5_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL)
    );
    repair_num[id - 1] := repair_num[id - 1] + 1;
    Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_repairing" -> (
      Chart_model_RTPS_Writer_Writer_repair_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Writer_Writer_repair_st := "Chart_model_RTPS_Writer_Writer_repair_repairing";
      Chart_model_RTPS_Writer_Writer_repair_repairing_done := 1
    )
  );
  Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_repairing" && Chart_model_RTPS_Writer_Writer_repair_repairing_done == 0 && (cansend == 0 || repair_num[id - 1] > request_num[id - 1]) -> (
    Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_repairing" -> (
      Chart_model_RTPS_Writer_Writer_repair_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Writer_Writer_repair_st := "Chart_model_RTPS_Writer_Writer_repair_waiting";
      Chart_model_RTPS_Writer_Writer_repair_repairing_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Writer_Writer_repair_repairing_done
end

procedure during_Chart_model_RTPS_Writer_Writer_repair_waiting begin
  Chart_model_RTPS_Writer_Writer_repair_waiting_done := 0;
  id > 0 && request_num[id - 1] > acked_num[id - 1] -> (
    Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_waiting" -> (
      Chart_model_RTPS_Writer_Writer_repair_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_RTPS_Writer_Writer_repair_st := "Chart_model_RTPS_Writer_Writer_repair_must_repair";
        Chart_model_RTPS_Writer_Writer_repair_must_repair_time := 0;
        ackFlag := 0;
        Chart_model_RTPS_Writer_Writer_repair_must_repair_st := "Chart_model_RTPS_Writer_Writer_repair_must_repair_en"
      );
      Chart_model_RTPS_Writer_Writer_repair_waiting_done := 1
    )
  );
  Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_waiting" && Chart_model_RTPS_Writer_Writer_repair_waiting_done == 0 && (ChartEL != [] && top(ChartEL) == "ACKNACK2") && (id <= 0 || request_num[id - 1] <= acked_num[id - 1]) -> (
    id := ack_id;
    wid := WriterId;
    rid := id;
    an := buffer_acknack[rid - 1][2];
    rn := buffer_acknack[rid - 1][3];
    acked_num[id - 1] := an;
    request_num[id - 1] := rn;
    ackFlag := 1;
    Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_waiting" -> (
      Chart_model_RTPS_Writer_Writer_repair_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Writer_Writer_repair_st := "Chart_model_RTPS_Writer_Writer_repair_waiting";
      Chart_model_RTPS_Writer_Writer_repair_waiting_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Writer_Writer_repair_waiting_done
end

procedure during_Chart_model_RTPS_Writer_Writer_repair_must_repair begin
  Chart_model_RTPS_Writer_Writer_repair_must_repair_done := 0;
  Chart_model_RTPS_Writer_Writer_repair_must_repair_time >= heartbeatResponseDelay -> (
    repair_num[id - 1] := acked_num[id - 1] + 1;
    ackFlag := 0;
    Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair" -> (
      if Chart_model_RTPS_Writer_Writer_repair_must_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair_en" then
        Chart_model_RTPS_Writer_Writer_repair_must_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair_en" -> Chart_model_RTPS_Writer_Writer_repair_must_repair_st := ""
      else
        skip
      endif;
      Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair" -> (
        Chart_model_RTPS_Writer_Writer_repair_must_repair_time := -1;
        Chart_model_RTPS_Writer_Writer_repair_st := ""
      );
      Chart_model_RTPS_Writer_Writer_repair_st == "" && Chart_st == "Chart_model" -> Chart_model_RTPS_Writer_Writer_repair_st := "Chart_model_RTPS_Writer_Writer_repair_repairing";
      Chart_model_RTPS_Writer_Writer_repair_must_repair_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Writer_Writer_repair_must_repair_done
end

procedure during_Chart_model_RTPS_Writer_Writer_repair_must_repair_en begin
  Chart_model_RTPS_Writer_Writer_repair_must_repair_en_done := 0;
  ChartEL != [] && top(ChartEL) == "ACKNACK2" -> (
    id := ack_id;
    wid := WriterId;
    rid := id;
    an := buffer_acknack[rid - 1][2];
    rn := buffer_acknack[rid - 1][3];
    acked_num[id - 1] := an;
    request_num[id - 1] := rn;
    ackFlag := 1;
    Chart_model_RTPS_Writer_Writer_repair_must_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair_en" -> (
      Chart_model_RTPS_Writer_Writer_repair_must_repair_st := "";
      Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair" -> Chart_model_RTPS_Writer_Writer_repair_must_repair_st := "Chart_model_RTPS_Writer_Writer_repair_must_repair_en";
      Chart_model_RTPS_Writer_Writer_repair_must_repair_en_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Writer_Writer_repair_must_repair_en_done
end

procedure during_Chart_model_RTPS_Writer_Writer_send_pushing begin
  Chart_model_RTPS_Writer_Writer_send_pushing_done := 0;
  i := first_SN;
  @J11;
  empty_flag := flag;
  empty_flag == 1 -> (
    Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_pushing" -> (
      Chart_model_RTPS_Writer_Writer_send_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_RTPS_Writer_Writer_send_st := "Chart_model_RTPS_Writer_Writer_send_announcing";
        Chart_model_RTPS_Writer_Writer_send_announcing_time := 0
      );
      Chart_ret := 1;
      Chart_model_RTPS_Writer_Writer_send_pushing_done := 1
    )
  );
  i := first_SN;
  @J11;
  empty_flag := flag;
  Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_pushing" && Chart_model_RTPS_Writer_Writer_send_pushing_done == 0 && cansend == 1 && empty_flag == 0 -> (
    sn := index;
    i := 1;
    @J47;
    i := index;
    J462_done := 0;
    i == 1 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_try" then
        @during_Chart_model_channel_channel_1_try
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_1" then
        @during_Chart_model_channel_channel_1_delay_1
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_2" then
        @during_Chart_model_channel_channel_1_delay_2
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_next" then
        @during_Chart_model_channel_channel_1_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 && i == 2 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_try" then
        @during_Chart_model_channel_channel_2_try
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_1" then
        @during_Chart_model_channel_channel_2_delay_1
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_2" then
        @during_Chart_model_channel_channel_2_delay_2
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_next" then
        @during_Chart_model_channel_channel_2_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 && i == 3 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_try" then
        @during_Chart_model_channel_channel_3_try
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_1" then
        @during_Chart_model_channel_channel_3_delay_1
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_2" then
        @during_Chart_model_channel_channel_3_delay_2
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_next" then
        @during_Chart_model_channel_channel_3_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 && i == 4 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_try" then
        @during_Chart_model_channel_channel_4_try
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_1" then
        @during_Chart_model_channel_channel_4_delay_1
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_2" then
        @during_Chart_model_channel_channel_4_delay_2
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_next" then
        @during_Chart_model_channel_channel_4_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL);
      J462_done := 1
    );
    J462_done == 0 -> (
      ChartEL := push(ChartEL,"TRY");
      Chart_ret := 0;
      if Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_try" then
        @during_Chart_model_channel_channel_5_try
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_1" then
        @during_Chart_model_channel_channel_5_delay_1
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_2" then
        @during_Chart_model_channel_channel_5_delay_2
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_next" then
        @during_Chart_model_channel_channel_5_next
      else
        skip
      endif;
      ChartEL := pop(ChartEL)
    );
    unsent[index - 1] := 0;
    index := index + 1;
    Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_pushing" -> (
      Chart_model_RTPS_Writer_Writer_send_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Writer_Writer_send_st := "Chart_model_RTPS_Writer_Writer_send_pushing";
      Chart_model_RTPS_Writer_Writer_send_pushing_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Writer_Writer_send_pushing_done
end

procedure during_Chart_model_RTPS_Writer_Writer_send_announcing begin
  Chart_model_RTPS_Writer_Writer_send_announcing_done := 0;
  i := 1;
  @J625;
  acked_all_flag := flag;
  i := first_SN;
  @J11;
  empty_flag := flag;
  Chart_model_RTPS_Writer_Writer_send_announcing_time >= heartbeatPeriod && acked_all_flag == 0 && empty_flag == 1 -> (
    wid := WriterId;
    count := hb_count;
    J33_done := 0;
    count == 3 -> (
      buffer_heartbeat[wid - 1][0] := NO_SET;
      count1 := 0;
      J33_done := 1
    );
    J33_done == 0 -> (
      buffer_heartbeat[wid - 1][0] := SET;
      count1 := count + 1
    );
    set_final_Flag_count1 := count1;
    hb_count := set_final_Flag_count1;
    wid := WriterId;
    flag := liveliness;
    buffer_heartbeat[wid - 1][1] := flag;
    wid := WriterId;
    buffer_heartbeat[wid - 1][2] := first_SN;
    buffer_heartbeat[wid - 1][3] := last_SN;
    ChartEL := push(ChartEL,"HEARTBEAT");
    Chart_ret := 0;
    if Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_try" then
      @during_Chart_model_channel_Heartbeat_try
    elif Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_delay" then
      @during_Chart_model_channel_Heartbeat_delay
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" -> sendFlag := 1;
    Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" -> (
      sendFlag := 0;
      Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" -> (
        Chart_model_RTPS_Writer_Writer_send_announcing_time := -1;
        Chart_model_RTPS_Writer_Writer_send_st := ""
      );
      Chart_model_RTPS_Writer_Writer_send_st == "" && Chart_st == "Chart_model" -> (
        Chart_model_RTPS_Writer_Writer_send_st := "Chart_model_RTPS_Writer_Writer_send_announcing";
        Chart_model_RTPS_Writer_Writer_send_announcing_time := 0
      );
      Chart_ret := 1;
      Chart_model_RTPS_Writer_Writer_send_announcing_done := 1
    )
  );
  i := 1;
  @J625;
  acked_all_flag := flag;
  i := first_SN;
  @J11;
  empty_flag := flag;
  Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" && Chart_model_RTPS_Writer_Writer_send_announcing_done == 0 && acked_all_flag == 0 && empty_flag == 0 -> (
    Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" -> (
      Chart_model_RTPS_Writer_Writer_send_announcing_time := -1;
      Chart_model_RTPS_Writer_Writer_send_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Writer_Writer_send_st := "Chart_model_RTPS_Writer_Writer_send_pushing";
      Chart_ret := 1;
      Chart_model_RTPS_Writer_Writer_send_announcing_done := 1
    )
  );
  i := 1;
  @J625;
  acked_all_flag := flag;
  Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" && Chart_model_RTPS_Writer_Writer_send_announcing_done == 0 && acked_all_flag == 1 -> (
    complete := 1;
    Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" -> (
      Chart_model_RTPS_Writer_Writer_send_announcing_time := -1;
      Chart_model_RTPS_Writer_Writer_send_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Writer_Writer_send_st := "Chart_model_RTPS_Writer_Writer_send_idle";
      Chart_model_RTPS_Writer_Writer_send_announcing_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Writer_Writer_send_announcing_done
end

procedure during_Chart_model_RTPS_Writer_Writer_send_idle begin
  Chart_model_RTPS_Writer_Writer_send_idle_done := 0;
  i := 1;
  @J625;
  acked_all_flag := flag;
  acked_all_flag == 0 -> (
    Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_idle" -> (
      Chart_model_RTPS_Writer_Writer_send_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_RTPS_Writer_Writer_send_st := "Chart_model_RTPS_Writer_Writer_send_announcing";
        Chart_model_RTPS_Writer_Writer_send_announcing_time := 0
      );
      Chart_model_RTPS_Writer_Writer_send_idle_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Writer_Writer_send_idle_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready begin
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready_done := 0;
  ChartEL != [] && top(ChartEL) == "HEARTBEAT2" -> (
    wid := 1;
    rid := 1;
    firstSN := buffer_heartbeat[1 - 1][2];
    lastSN := buffer_heartbeat[1 - 1][3];
    get_heartbeatSN_lastSN := lastSN;
    missing_num := get_heartbeatSN_lastSN;
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready";
      Chart_ret := 1;
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready_done := 1
    )
  );
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" && Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready_done == 0 && (ChartEL != [] && top(ChartEL) == "SUCCESS") && seq_num_1 > received_num -> (
    index := seq_num_1;
    received_set[WriterId - 1][index - 1] := 1;
    wid := WriterId;
    rid := ReaderId_1;
    sn1 := received_num;
    i := sn1 + 1;
    @J150;
    check_received_sn2 := sn2;
    received_num := check_received_sn2;
    wid := WriterId;
    rid := ReaderId_1;
    sn1 := missing_num;
    i := sn1;
    @J123;
    check_missing_sn2 := sn2;
    missing_num := check_missing_sn2;
    RHC[index - 1] := buffer_data[WriterId - 1][ReaderId_1 - 1][index - 1];
    buffer_data[WriterId - 1][ReaderId_1 - 1][index - 1] := 0;
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready";
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack begin
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_done := 0;
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time >= nackResponseDelay -> (
    ack_id := ReaderId_1;
    wid := WriterId;
    rid := ack_id;
    rn := received_num;
    mn := missing_num;
    buffer_acknack[rid - 1][0] := 1;
    buffer_acknack[rid - 1][1] := rid;
    buffer_acknack[rid - 1][2] := rn;
    buffer_acknack[rid - 1][3] := mn;
    ChartEL := push(ChartEL,"ACKNACK");
    Chart_ret := 0;
    if Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_try" then
      @during_Chart_model_channel_Acknack_1_try
    elif Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_delay" then
      @during_Chart_model_channel_Acknack_1_delay
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" -> hFlag := 0;
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time := -1;
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting";
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting begin
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting_done := 0;
  ChartEL != [] && top(ChartEL) == "HEARTBEAT2" -> (
    hFlag := 1;
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" -> (
      J224_done := 0;
      buffer_heartbeat[WriterId - 1][livelinessFlag - 1] == NO_SET -> (
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "";
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack";
          Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time := 0
        );
        J224_done := 1
      );
      J224_done == 0 && buffer_heartbeat[WriterId - 1][finalFlag - 1] == SET -> (
        hFlag := 0;
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "";
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "" && Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting";
        J224_done := 1
      );
      J224_done == 0 -> (
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "";
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "" && Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack";
        J224_done := 1
      );
      Chart_ret := J224_done;
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack begin
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack_done := 0;
  missing_num > received_num -> (
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack";
        Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time := 0
      );
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack_done := 1
    )
  );
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" && Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack_done == 0 && missing_num <= received_num -> (
    hFlag := 0;
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting";
      Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready begin
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready_done := 0;
  ChartEL != [] && top(ChartEL) == "HEARTBEAT2" -> (
    wid := 1;
    rid := 2;
    firstSN := buffer_heartbeat[1 - 1][2];
    lastSN := buffer_heartbeat[1 - 1][3];
    get_heartbeatSN_lastSN := lastSN;
    missing_num2 := get_heartbeatSN_lastSN;
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready";
      Chart_ret := 1;
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready_done := 1
    )
  );
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" && Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready_done == 0 && (ChartEL != [] && top(ChartEL) == "SUCCESS") && seq_num_2 > received_num2 -> (
    index2 := seq_num_2;
    received_set[ReaderId_2 - 1][index2 - 1] := 1;
    wid := WriterId;
    rid := ReaderId_2;
    sn1 := received_num2;
    i := sn1 + 1;
    @J150;
    check_received_sn2 := sn2;
    received_num2 := check_received_sn2;
    wid := WriterId;
    rid := ReaderId_2;
    sn1 := missing_num2;
    i := sn1;
    @J123;
    check_missing_sn2 := sn2;
    missing_num2 := check_missing_sn2;
    RHC2[index2 - 1] := buffer_data[WriterId - 1][ReaderId_2 - 1][index2 - 1];
    buffer_data[WriterId - 1][ReaderId_2 - 1][index2 - 1] := 0;
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready";
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack begin
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_done := 0;
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time >= nackResponseDelay -> (
    ack_id := ReaderId_2;
    wid := WriterId;
    rid := ack_id;
    rn := received_num2;
    mn := missing_num2;
    buffer_acknack[rid - 1][0] := 1;
    buffer_acknack[rid - 1][1] := rid;
    buffer_acknack[rid - 1][2] := rn;
    buffer_acknack[rid - 1][3] := mn;
    ChartEL := push(ChartEL,"ACKNACK");
    Chart_ret := 0;
    if Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_try" then
      @during_Chart_model_channel_Acknack_2_try
    elif Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_delay" then
      @during_Chart_model_channel_Acknack_2_delay
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" -> hFlag := 0;
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time := -1;
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting";
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack begin
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack_done := 0;
  missing_num2 > received_num2 -> (
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack";
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time := 0
      );
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack_done := 1
    )
  );
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" && Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack_done == 0 && missing_num2 <= received_num2 -> (
    hFlag := 0;
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" -> (
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "";
      Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting";
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack_done := 1
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack_done
end

procedure during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting begin
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting_done := 0;
  ChartEL != [] && top(ChartEL) == "HEARTBEAT2" -> (
    hFlag := 1;
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" -> (
      J191_done := 0;
      buffer_heartbeat[WriterId - 1][livelinessFlag - 1] == NO_SET -> (
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "";
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack";
          Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time := 0
        );
        J191_done := 1
      );
      J191_done == 0 && buffer_heartbeat[WriterId - 1][finalFlag - 1] == SET -> (
        hFlag := 0;
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "";
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "" && Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting";
        J191_done := 1
      );
      J191_done == 0 -> (
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "";
        Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "" && Chart_st == "Chart_model" -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack";
        J191_done := 1
      );
      Chart_ret := J191_done;
      Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting_done
end

procedure during_Chart_model_channel_channel_1_try begin
  Chart_model_channel_channel_1_try_done := 0;
  ChartEL != [] && top(ChartEL) == "TRY" -> (
    Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_try" -> (
      J360_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d1 := y;
        Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_try" -> Chart_model_channel_channel_1_st := "";
        Chart_model_channel_channel_1_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_channel_1_st := "Chart_model_channel_channel_1_delay_1";
          Chart_model_channel_channel_1_delay_1_time := 0
        );
        J360_done := 1
      );
      J360_done == 0 -> (
        buffer_data[WriterId - 1][ReaderId_2 - 1][0] := 0;
        Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_try" -> Chart_model_channel_channel_1_st := "";
        Chart_model_channel_channel_1_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_channel_1_st := "Chart_model_channel_channel_1_next";
        J360_done := 1
      );
      Chart_ret := J360_done;
      Chart_model_channel_channel_1_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_channel_1_try_done
end

procedure during_Chart_model_channel_channel_1_delay_1 begin
  Chart_model_channel_channel_1_delay_1_done := 0;
  Chart_model_channel_channel_1_delay_1_time >= d1 -> (
    seq_num_1 := 1;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_1" -> (
      Chart_model_channel_channel_1_delay_1_time := -1;
      Chart_model_channel_channel_1_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_1_st := "Chart_model_channel_channel_1_next";
      Chart_model_channel_channel_1_delay_1_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_1_delay_1_done
end

procedure during_Chart_model_channel_channel_1_delay_2 begin
  Chart_model_channel_channel_1_delay_2_done := 0;
  Chart_model_channel_channel_1_delay_2_time >= d1 -> (
    seq_num_2 := 1;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_2" -> (
      Chart_model_channel_channel_1_delay_2_time := -1;
      Chart_model_channel_channel_1_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_1_st := "Chart_model_channel_channel_1_try";
      Chart_model_channel_channel_1_delay_2_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_1_delay_2_done
end

procedure during_Chart_model_channel_channel_1_next begin
  Chart_model_channel_channel_1_next_done := 0;
  x := uniform(0,1);
  if x > 0.4 then
    chan_r := 1
  else
    chan_r := 0
  endif;
  chan_r == 1 -> (
    y := uniform(0,1);
    d1 := y;
    Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_next" -> (
      Chart_model_channel_channel_1_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_channel_channel_1_st := "Chart_model_channel_channel_1_delay_2";
        Chart_model_channel_channel_1_delay_2_time := 0
      );
      Chart_model_channel_channel_1_next_done := 1
    )
  );
  Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_next" && Chart_model_channel_channel_1_next_done == 0 -> (
    buffer_data[WriterId - 1][ReaderId_1 - 1][0] := 0;
    Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_next" -> (
      Chart_model_channel_channel_1_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_1_st := "Chart_model_channel_channel_1_try";
      Chart_model_channel_channel_1_next_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_1_next_done
end

procedure during_Chart_model_channel_channel_2_try begin
  Chart_model_channel_channel_2_try_done := 0;
  ChartEL != [] && top(ChartEL) == "TRY" -> (
    Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_try" -> (
      J517_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d2 := y;
        Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_try" -> Chart_model_channel_channel_2_st := "";
        Chart_model_channel_channel_2_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_channel_2_st := "Chart_model_channel_channel_2_delay_1";
          Chart_model_channel_channel_2_delay_1_time := 0
        );
        J517_done := 1
      );
      J517_done == 0 -> (
        buffer_data[WriterId - 1][0][1] := 0;
        Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_try" -> Chart_model_channel_channel_2_st := "";
        Chart_model_channel_channel_2_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_channel_2_st := "Chart_model_channel_channel_2_next";
        J517_done := 1
      );
      Chart_ret := J517_done;
      Chart_model_channel_channel_2_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_channel_2_try_done
end

procedure during_Chart_model_channel_channel_2_delay_1 begin
  Chart_model_channel_channel_2_delay_1_done := 0;
  Chart_model_channel_channel_2_delay_1_time >= d2 -> (
    seq_num_1 := 2;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_1" -> (
      Chart_model_channel_channel_2_delay_1_time := -1;
      Chart_model_channel_channel_2_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_2_st := "Chart_model_channel_channel_2_next";
      Chart_model_channel_channel_2_delay_1_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_2_delay_1_done
end

procedure during_Chart_model_channel_channel_2_delay_2 begin
  Chart_model_channel_channel_2_delay_2_done := 0;
  Chart_model_channel_channel_2_delay_2_time >= d2 -> (
    seq_num_2 := 2;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_2" -> (
      Chart_model_channel_channel_2_delay_2_time := -1;
      Chart_model_channel_channel_2_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_2_st := "Chart_model_channel_channel_2_try";
      Chart_model_channel_channel_2_delay_2_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_2_delay_2_done
end

procedure during_Chart_model_channel_channel_2_next begin
  Chart_model_channel_channel_2_next_done := 0;
  x := uniform(0,1);
  if x > 0.4 then
    chan_r := 1
  else
    chan_r := 0
  endif;
  chan_r == 1 -> (
    y := uniform(0,1);
    d2 := y;
    Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_next" -> (
      Chart_model_channel_channel_2_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_channel_channel_2_st := "Chart_model_channel_channel_2_delay_2";
        Chart_model_channel_channel_2_delay_2_time := 0
      );
      Chart_model_channel_channel_2_next_done := 1
    )
  );
  Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_next" && Chart_model_channel_channel_2_next_done == 0 -> (
    buffer_data[WriterId - 1][1][1] := 0;
    Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_next" -> (
      Chart_model_channel_channel_2_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_2_st := "Chart_model_channel_channel_2_try";
      Chart_model_channel_channel_2_next_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_2_next_done
end

procedure during_Chart_model_channel_channel_3_try begin
  Chart_model_channel_channel_3_try_done := 0;
  ChartEL != [] && top(ChartEL) == "TRY" -> (
    Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_try" -> (
      J535_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d3 := y;
        Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_try" -> Chart_model_channel_channel_3_st := "";
        Chart_model_channel_channel_3_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_channel_3_st := "Chart_model_channel_channel_3_delay_1";
          Chart_model_channel_channel_3_delay_1_time := 0
        );
        J535_done := 1
      );
      J535_done == 0 -> (
        buffer_data[WriterId - 1][0][2] := 0;
        Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_try" -> Chart_model_channel_channel_3_st := "";
        Chart_model_channel_channel_3_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_channel_3_st := "Chart_model_channel_channel_3_next";
        J535_done := 1
      );
      Chart_ret := J535_done;
      Chart_model_channel_channel_3_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_channel_3_try_done
end

procedure during_Chart_model_channel_channel_3_delay_1 begin
  Chart_model_channel_channel_3_delay_1_done := 0;
  Chart_model_channel_channel_3_delay_1_time >= d3 -> (
    seq_num_1 := 3;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_1" -> (
      Chart_model_channel_channel_3_delay_1_time := -1;
      Chart_model_channel_channel_3_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_3_st := "Chart_model_channel_channel_3_next";
      Chart_model_channel_channel_3_delay_1_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_3_delay_1_done
end

procedure during_Chart_model_channel_channel_3_delay_2 begin
  Chart_model_channel_channel_3_delay_2_done := 0;
  Chart_model_channel_channel_3_delay_2_time >= d3 -> (
    seq_num_2 := 3;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_2" -> (
      Chart_model_channel_channel_3_delay_2_time := -1;
      Chart_model_channel_channel_3_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_3_st := "Chart_model_channel_channel_3_try";
      Chart_model_channel_channel_3_delay_2_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_3_delay_2_done
end

procedure during_Chart_model_channel_channel_3_next begin
  Chart_model_channel_channel_3_next_done := 0;
  x := uniform(0,1);
  if x > 0.4 then
    chan_r := 1
  else
    chan_r := 0
  endif;
  chan_r == 1 -> (
    y := uniform(0,1);
    d3 := y;
    Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_next" -> (
      Chart_model_channel_channel_3_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_channel_channel_3_st := "Chart_model_channel_channel_3_delay_2";
        Chart_model_channel_channel_3_delay_2_time := 0
      );
      Chart_model_channel_channel_3_next_done := 1
    )
  );
  Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_next" && Chart_model_channel_channel_3_next_done == 0 -> (
    buffer_data[WriterId - 1][1][2] := 0;
    Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_next" -> (
      Chart_model_channel_channel_3_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_3_st := "Chart_model_channel_channel_3_try";
      Chart_model_channel_channel_3_next_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_3_next_done
end

procedure during_Chart_model_channel_channel_4_try begin
  Chart_model_channel_channel_4_try_done := 0;
  ChartEL != [] && top(ChartEL) == "TRY" -> (
    Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_try" -> (
      J553_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d4 := y;
        Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_try" -> Chart_model_channel_channel_4_st := "";
        Chart_model_channel_channel_4_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_channel_4_st := "Chart_model_channel_channel_4_delay_1";
          Chart_model_channel_channel_4_delay_1_time := 0
        );
        J553_done := 1
      );
      J553_done == 0 -> (
        buffer_data[WriterId - 1][0][3] := 0;
        Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_try" -> Chart_model_channel_channel_4_st := "";
        Chart_model_channel_channel_4_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_channel_4_st := "Chart_model_channel_channel_4_next";
        J553_done := 1
      );
      Chart_ret := J553_done;
      Chart_model_channel_channel_4_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_channel_4_try_done
end

procedure during_Chart_model_channel_channel_4_delay_1 begin
  Chart_model_channel_channel_4_delay_1_done := 0;
  Chart_model_channel_channel_4_delay_1_time >= d4 -> (
    seq_num_1 := 4;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_1" -> (
      Chart_model_channel_channel_4_delay_1_time := -1;
      Chart_model_channel_channel_4_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_4_st := "Chart_model_channel_channel_4_next";
      Chart_model_channel_channel_4_delay_1_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_4_delay_1_done
end

procedure during_Chart_model_channel_channel_4_delay_2 begin
  Chart_model_channel_channel_4_delay_2_done := 0;
  Chart_model_channel_channel_4_delay_2_time >= d4 -> (
    seq_num_2 := 4;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_2" -> (
      Chart_model_channel_channel_4_delay_2_time := -1;
      Chart_model_channel_channel_4_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_4_st := "Chart_model_channel_channel_4_try";
      Chart_model_channel_channel_4_delay_2_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_4_delay_2_done
end

procedure during_Chart_model_channel_channel_4_next begin
  Chart_model_channel_channel_4_next_done := 0;
  x := uniform(0,1);
  if x > 0.4 then
    chan_r := 1
  else
    chan_r := 0
  endif;
  chan_r == 1 -> (
    y := uniform(0,1);
    d4 := y;
    Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_next" -> (
      Chart_model_channel_channel_4_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_channel_channel_4_st := "Chart_model_channel_channel_4_delay_2";
        Chart_model_channel_channel_4_delay_2_time := 0
      );
      Chart_model_channel_channel_4_next_done := 1
    )
  );
  Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_next" && Chart_model_channel_channel_4_next_done == 0 -> (
    buffer_data[WriterId - 1][1][3] := 0;
    Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_next" -> (
      Chart_model_channel_channel_4_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_4_st := "Chart_model_channel_channel_4_try";
      Chart_model_channel_channel_4_next_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_4_next_done
end

procedure during_Chart_model_channel_channel_5_try begin
  Chart_model_channel_channel_5_try_done := 0;
  ChartEL != [] && top(ChartEL) == "TRY" -> (
    Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_try" -> (
      J571_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d5 := y;
        Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_try" -> Chart_model_channel_channel_5_st := "";
        Chart_model_channel_channel_5_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_channel_5_st := "Chart_model_channel_channel_5_delay_1";
          Chart_model_channel_channel_5_delay_1_time := 0
        );
        J571_done := 1
      );
      J571_done == 0 -> (
        buffer_data[WriterId - 1][0][4] := 0;
        Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_try" -> Chart_model_channel_channel_5_st := "";
        Chart_model_channel_channel_5_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_channel_5_st := "Chart_model_channel_channel_5_next";
        J571_done := 1
      );
      Chart_ret := J571_done;
      Chart_model_channel_channel_5_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_channel_5_try_done
end

procedure during_Chart_model_channel_channel_5_delay_1 begin
  Chart_model_channel_channel_5_delay_1_done := 0;
  Chart_model_channel_channel_5_delay_1_time >= d5 -> (
    seq_num_1 := 5;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_1" -> (
      Chart_model_channel_channel_5_delay_1_time := -1;
      Chart_model_channel_channel_5_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_5_st := "Chart_model_channel_channel_5_next";
      Chart_model_channel_channel_5_delay_1_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_5_delay_1_done
end

procedure during_Chart_model_channel_channel_5_delay_2 begin
  Chart_model_channel_channel_5_delay_2_done := 0;
  Chart_model_channel_channel_5_delay_2_time >= d5 -> (
    seq_num_2 := 5;
    ChartEL := push(ChartEL,"SUCCESS");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_2" -> (
      Chart_model_channel_channel_5_delay_2_time := -1;
      Chart_model_channel_channel_5_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_5_st := "Chart_model_channel_channel_5_try";
      Chart_model_channel_channel_5_delay_2_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_5_delay_2_done
end

procedure during_Chart_model_channel_channel_5_next begin
  Chart_model_channel_channel_5_next_done := 0;
  x := uniform(0,1);
  if x > 0.4 then
    chan_r := 1
  else
    chan_r := 0
  endif;
  chan_r == 1 -> (
    y := uniform(0,1);
    d5 := y;
    Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_next" -> (
      Chart_model_channel_channel_5_st := "";
      Chart_st == "Chart_model" -> (
        Chart_model_channel_channel_5_st := "Chart_model_channel_channel_5_delay_2";
        Chart_model_channel_channel_5_delay_2_time := 0
      );
      Chart_model_channel_channel_5_next_done := 1
    )
  );
  Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_next" && Chart_model_channel_channel_5_next_done == 0 -> (
    buffer_data[WriterId - 1][1][4] := 0;
    Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_next" -> (
      Chart_model_channel_channel_5_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_channel_5_st := "Chart_model_channel_channel_5_try";
      Chart_model_channel_channel_5_next_done := 1
    )
  );
  Chart_ret := Chart_model_channel_channel_5_next_done
end

procedure during_Chart_model_channel_Heartbeat_try begin
  Chart_model_channel_Heartbeat_try_done := 0;
  ChartEL != [] && top(ChartEL) == "HEARTBEAT" -> (
    Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_try" -> (
      J764_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d_hb := y;
        Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_try" -> Chart_model_channel_Heartbeat_st := "";
        Chart_model_channel_Heartbeat_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_Heartbeat_st := "Chart_model_channel_Heartbeat_delay";
          Chart_model_channel_Heartbeat_delay_time := 0
        );
        J764_done := 1
      );
      J764_done == 0 -> (
        Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_try" -> Chart_model_channel_Heartbeat_st := "";
        Chart_model_channel_Heartbeat_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_Heartbeat_st := "Chart_model_channel_Heartbeat_try";
        J764_done := 1
      );
      Chart_ret := J764_done;
      Chart_model_channel_Heartbeat_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_Heartbeat_try_done
end

procedure during_Chart_model_channel_Heartbeat_delay begin
  Chart_model_channel_Heartbeat_delay_done := 0;
  Chart_model_channel_Heartbeat_delay_time >= d_hb -> (
    ChartEL := push(ChartEL,"HEARTBEAT2");
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting
    elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack
    elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" then
      @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_delay" -> (
      Chart_model_channel_Heartbeat_delay_time := -1;
      Chart_model_channel_Heartbeat_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_Heartbeat_st := "Chart_model_channel_Heartbeat_try";
      Chart_model_channel_Heartbeat_delay_done := 1
    )
  );
  Chart_ret := Chart_model_channel_Heartbeat_delay_done
end

procedure during_Chart_model_channel_Acknack_1_try begin
  Chart_model_channel_Acknack_1_try_done := 0;
  ChartEL != [] && top(ChartEL) == "ACKNACK" -> (
    Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_try" -> (
      J723_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d_ack1 := y;
        Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_try" -> Chart_model_channel_Acknack_1_st := "";
        Chart_model_channel_Acknack_1_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_Acknack_1_st := "Chart_model_channel_Acknack_1_delay";
          Chart_model_channel_Acknack_1_delay_time := 0
        );
        J723_done := 1
      );
      J723_done == 0 -> (
        Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_try" -> Chart_model_channel_Acknack_1_st := "";
        Chart_model_channel_Acknack_1_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_Acknack_1_st := "Chart_model_channel_Acknack_1_try";
        J723_done := 1
      );
      Chart_ret := J723_done;
      Chart_model_channel_Acknack_1_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_Acknack_1_try_done
end

procedure during_Chart_model_channel_Acknack_1_delay begin
  Chart_model_channel_Acknack_1_delay_done := 0;
  Chart_model_channel_Acknack_1_delay_time >= d_ack1 -> (
    ack_id := ReaderId_1;
    ChartEL := push(ChartEL,"ACKNACK2");
    Chart_ret := 0;
    if Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_repairing" then
      @during_Chart_model_RTPS_Writer_Writer_repair_repairing
    elif Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_waiting" then
      @during_Chart_model_RTPS_Writer_Writer_repair_waiting
    elif Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair" then
      @during_Chart_model_RTPS_Writer_Writer_repair_must_repair;
      Chart_ret == 0 -> (
        if Chart_model_RTPS_Writer_Writer_repair_must_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair_en" then
          @during_Chart_model_RTPS_Writer_Writer_repair_must_repair_en
        else
          skip
        endif
      )
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_pushing" then
      @during_Chart_model_RTPS_Writer_Writer_send_pushing
    elif Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" then
      @during_Chart_model_RTPS_Writer_Writer_send_announcing
    elif Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_idle" then
      @during_Chart_model_RTPS_Writer_Writer_send_idle
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_delay" -> (
      Chart_model_channel_Acknack_1_delay_time := -1;
      Chart_model_channel_Acknack_1_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_Acknack_1_st := "Chart_model_channel_Acknack_1_try";
      Chart_model_channel_Acknack_1_delay_done := 1
    )
  );
  Chart_ret := Chart_model_channel_Acknack_1_delay_done
end

procedure during_Chart_model_channel_Acknack_2_try begin
  Chart_model_channel_Acknack_2_try_done := 0;
  ChartEL != [] && top(ChartEL) == "ACKNACK" -> (
    Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_try" -> (
      J807_done := 0;
      x := uniform(0,1);
      if x > 0.4 then
        chan_r := 1
      else
        chan_r := 0
      endif;
      chan_r == 1 -> (
        y := uniform(0,1);
        d_ack2 := y;
        Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_try" -> Chart_model_channel_Acknack_2_st := "";
        Chart_model_channel_Acknack_2_st == "" && Chart_st == "Chart_model" -> (
          Chart_model_channel_Acknack_2_st := "Chart_model_channel_Acknack_2_delay";
          Chart_model_channel_Acknack_2_delay_time := 0
        );
        J807_done := 1
      );
      J807_done == 0 -> (
        Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_try" -> Chart_model_channel_Acknack_2_st := "";
        Chart_model_channel_Acknack_2_st == "" && Chart_st == "Chart_model" -> Chart_model_channel_Acknack_2_st := "Chart_model_channel_Acknack_2_try";
        J807_done := 1
      );
      Chart_ret := J807_done;
      Chart_model_channel_Acknack_2_try_done := Chart_ret
    )
  );
  Chart_ret := Chart_model_channel_Acknack_2_try_done
end

procedure during_Chart_model_channel_Acknack_2_delay begin
  Chart_model_channel_Acknack_2_delay_done := 0;
  Chart_model_channel_Acknack_2_delay_time >= d_ack2 -> (
    ack_id := ReaderId_2;
    ChartEL := push(ChartEL,"ACKNACK2");
    Chart_ret := 0;
    if Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_repairing" then
      @during_Chart_model_RTPS_Writer_Writer_repair_repairing
    elif Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_waiting" then
      @during_Chart_model_RTPS_Writer_Writer_repair_waiting
    elif Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair" then
      @during_Chart_model_RTPS_Writer_Writer_repair_must_repair;
      Chart_ret == 0 -> (
        if Chart_model_RTPS_Writer_Writer_repair_must_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair_en" then
          @during_Chart_model_RTPS_Writer_Writer_repair_must_repair_en
        else
          skip
        endif
      )
    else
      skip
    endif;
    Chart_ret := 0;
    if Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_pushing" then
      @during_Chart_model_RTPS_Writer_Writer_send_pushing
    elif Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" then
      @during_Chart_model_RTPS_Writer_Writer_send_announcing
    elif Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_idle" then
      @during_Chart_model_RTPS_Writer_Writer_send_idle
    else
      skip
    endif;
    ChartEL := pop(ChartEL);
    Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_delay" -> (
      Chart_model_channel_Acknack_2_delay_time := -1;
      Chart_model_channel_Acknack_2_st := "";
      Chart_st == "Chart_model" -> Chart_model_channel_Acknack_2_st := "Chart_model_channel_Acknack_2_try";
      Chart_model_channel_Acknack_2_delay_done := 1
    )
  );
  Chart_ret := Chart_model_channel_Acknack_2_delay_done
end

procedure J625 begin
  J625_done := 0;
  i > 2 -> (
    flag := 1;
    J625_done := 1
  );
  J625_done == 0 && i <= 2 && buffer_acknack[i - 1][2] == 5 -> (
    i := i + 1;
    @J625;
    J625_done := 1
  );
  J625_done == 0 -> flag := 0
end

procedure J11 begin
  J11_done := 0;
  i > last_SN -> (
    flag := 1;
    J11_done := 1
  );
  J11_done == 0 && i <= last_SN && unsent[i - 1] == 0 -> (
    i := i + 1;
    @J11;
    J11_done := 1
  );
  J11_done == 0 -> flag := 0
end

procedure J47 begin
  i <= 2 -> (
    buffer_data[WriterId - 1][i - 1][sn - 1] := WHC[sn - 1];
    i := i + 1;
    @J47
  )
end

procedure J123 begin
  J123_done := 0;
  i >= 1 && received_set[rid - 1][i - 1] == 1 -> (
    i := i - 1;
    @J123;
    J123_done := 1
  );
  J123_done == 0 -> sn2 := i
end

procedure J150 begin
  J150_done := 0;
  i <= 5 && received_set[rid - 1][i - 1] == 1 -> (
    i := i + 1;
    @J150;
    J150_done := 1
  );
  J150_done == 0 -> sn2 := i - 1
end

begin
  start_Chart?;
  ChartEL := [];
  ch_x0_0?cansend;
  ch_x1_0?liveliness;
  ch_x2_0_in?first_SN;
  ch_x3_0_in?last_SN;
  RHC_in?RHC;
  WHC_in?WHC;
  RHC2_in?RHC2;
  hFlag := 0;
  index2 := 0;
  received_num2 := 0;
  missing_num2 := 0;
  index := 1;
  received_num := 0;
  missing_num := 0;
  hb_count := 0;
  sendFlag := 0;
  ackFlag := 0;
  repair_num := [0,0];
  id := 0;
  request_num := [0,0];
  buffer_heartbeat := [[0,0,0,0]];
  unsent := [1,1,1,1,1];
  buffer_acknack := [[0,0,0,0],[0,0,0,0]];
  ack_id := 0;
  received_set := [[0,0,0,0,0],[0,0,0,0,0]];
  seq_num_1 := 0;
  seq_num_2 := 0;
  SET := 0;
  NO_SET := 1;
  nackResponseDelay := 1;
  heartbeatResponseDelay := 1.5;
  heartbeatPeriod := 1.5;
  data := 0;
  data1 := 0;
  acked_num := [0,0];
  WriterId := 1;
  finalFlag := 2;
  livelinessFlag := 1;
  ReaderId_1 := 1;
  ReaderId_2 := 2;
  d1 := 0;
  d2 := 0;
  d3 := 0;
  d4 := 0;
  d5 := 0;
  d_ack1 := 0;
  d_ack2 := 0;
  d_hb := 0;
  Chart_model_RTPS_Writer_Writer_repair_must_repair_st := "";
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time := -1;
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time := -1;
  Chart_model_channel_channel_2_delay_2_time := -1;
  Chart_model_channel_channel_3_delay_2_time := -1;
  Chart_model_channel_channel_1_delay_2_time := -1;
  Chart_model_channel_channel_4_delay_2_time := -1;
  Chart_model_channel_channel_5_delay_2_time := -1;
  Chart_model_channel_channel_1_delay_1_time := -1;
  Chart_model_channel_channel_3_delay_1_time := -1;
  Chart_model_channel_channel_4_delay_1_time := -1;
  Chart_model_channel_channel_5_delay_1_time := -1;
  Chart_model_RTPS_Writer_Writer_repair_must_repair_time := -1;
  Chart_model_channel_channel_2_delay_1_time := -1;
  Chart_model_channel_Acknack_1_delay_time := -1;
  Chart_model_channel_Heartbeat_delay_time := -1;
  Chart_model_channel_Acknack_2_delay_time := -1;
  Chart_st := "Chart_model";
  Chart_model_RTPS_Writer_Writer_repair_st := "Chart_model_RTPS_Writer_Writer_repair_waiting";
  buffer_data := zeros(1,2,5);
  Chart_model_RTPS_Writer_Writer_send_st := "Chart_model_RTPS_Writer_Writer_send_announcing";
  Chart_model_RTPS_Writer_Writer_send_announcing_time := 0;
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready";
  Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting";
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready";
  Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st := "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting";
  Chart_model_channel_channel_1_st := "Chart_model_channel_channel_1_try";
  Chart_model_channel_channel_2_st := "Chart_model_channel_channel_2_try";
  Chart_model_channel_channel_3_st := "Chart_model_channel_channel_3_try";
  Chart_model_channel_channel_4_st := "Chart_model_channel_channel_4_try";
  Chart_model_channel_channel_5_st := "Chart_model_channel_channel_5_try";
  Chart_model_channel_Heartbeat_st := "Chart_model_channel_Heartbeat_try";
  Chart_model_channel_Acknack_1_st := "Chart_model_channel_Acknack_1_try";
  Chart_model_channel_Acknack_2_st := "Chart_model_channel_Acknack_2_try";
  RHC_out!RHC;
  WHC_out!WHC;
  RHC2_out!RHC2;
  end_Chart?;
  (
    start_Chart?;
    ch_x0_0?cansend;
    ch_x1_0?liveliness;
    ch_x2_0_in?first_SN;
    ch_x3_0_in?last_SN;
    RHC_in?RHC;
    WHC_in?WHC;
    RHC2_in?RHC2;
    Chart_ret := 0;
    if Chart_st == "Chart_model" then
      Chart_ret := 0;
      if Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_repairing" then
        @during_Chart_model_RTPS_Writer_Writer_repair_repairing
      elif Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_waiting" then
        @during_Chart_model_RTPS_Writer_Writer_repair_waiting
      elif Chart_model_RTPS_Writer_Writer_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair" then
        @during_Chart_model_RTPS_Writer_Writer_repair_must_repair;
        Chart_ret == 0 -> (
          if Chart_model_RTPS_Writer_Writer_repair_must_repair_st == "Chart_model_RTPS_Writer_Writer_repair_must_repair_en" then
            @during_Chart_model_RTPS_Writer_Writer_repair_must_repair_en
          else
            skip
          endif
        )
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_pushing" then
        @during_Chart_model_RTPS_Writer_Writer_send_pushing
      elif Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_announcing" then
        @during_Chart_model_RTPS_Writer_Writer_send_announcing
      elif Chart_model_RTPS_Writer_Writer_send_st == "Chart_model_RTPS_Writer_Writer_send_idle" then
        @during_Chart_model_RTPS_Writer_Writer_send_idle
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_receive_ready
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack
      elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_waiting
      elif Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_may_send_ack
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_receive_ready
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack
      elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_may_send_ack
      elif Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_st == "Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting" then
        @during_Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_waiting
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_try" then
        @during_Chart_model_channel_channel_1_try
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_1" then
        @during_Chart_model_channel_channel_1_delay_1
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_delay_2" then
        @during_Chart_model_channel_channel_1_delay_2
      elif Chart_model_channel_channel_1_st == "Chart_model_channel_channel_1_next" then
        @during_Chart_model_channel_channel_1_next
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_try" then
        @during_Chart_model_channel_channel_2_try
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_1" then
        @during_Chart_model_channel_channel_2_delay_1
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_delay_2" then
        @during_Chart_model_channel_channel_2_delay_2
      elif Chart_model_channel_channel_2_st == "Chart_model_channel_channel_2_next" then
        @during_Chart_model_channel_channel_2_next
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_try" then
        @during_Chart_model_channel_channel_3_try
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_1" then
        @during_Chart_model_channel_channel_3_delay_1
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_delay_2" then
        @during_Chart_model_channel_channel_3_delay_2
      elif Chart_model_channel_channel_3_st == "Chart_model_channel_channel_3_next" then
        @during_Chart_model_channel_channel_3_next
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_try" then
        @during_Chart_model_channel_channel_4_try
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_1" then
        @during_Chart_model_channel_channel_4_delay_1
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_delay_2" then
        @during_Chart_model_channel_channel_4_delay_2
      elif Chart_model_channel_channel_4_st == "Chart_model_channel_channel_4_next" then
        @during_Chart_model_channel_channel_4_next
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_try" then
        @during_Chart_model_channel_channel_5_try
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_1" then
        @during_Chart_model_channel_channel_5_delay_1
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_delay_2" then
        @during_Chart_model_channel_channel_5_delay_2
      elif Chart_model_channel_channel_5_st == "Chart_model_channel_channel_5_next" then
        @during_Chart_model_channel_channel_5_next
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_try" then
        @during_Chart_model_channel_Heartbeat_try
      elif Chart_model_channel_Heartbeat_st == "Chart_model_channel_Heartbeat_delay" then
        @during_Chart_model_channel_Heartbeat_delay
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_try" then
        @during_Chart_model_channel_Acknack_1_try
      elif Chart_model_channel_Acknack_1_st == "Chart_model_channel_Acknack_1_delay" then
        @during_Chart_model_channel_Acknack_1_delay
      else
        skip
      endif;
      Chart_ret := 0;
      if Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_try" then
        @during_Chart_model_channel_Acknack_2_try
      elif Chart_model_channel_Acknack_2_st == "Chart_model_channel_Acknack_2_delay" then
        @during_Chart_model_channel_Acknack_2_delay
      else
        skip
      endif
    else
      skip
    endif;
    RHC_out!RHC;
    WHC_out!WHC;
    RHC2_out!RHC2;
    end_Chart?;
    wait(0.1);
    Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time != -1 -> Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time := Chart_model_RTPS_Reader_RTPS_Reader_2_Reader_response_must_send_ack_time + 0.1;
    Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time != -1 -> Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time := Chart_model_RTPS_Reader_RTPS_Reader_1_Reader_response_must_send_ack_time + 0.1;
    Chart_model_RTPS_Writer_Writer_send_announcing_time != -1 -> Chart_model_RTPS_Writer_Writer_send_announcing_time := Chart_model_RTPS_Writer_Writer_send_announcing_time + 0.1;
    Chart_model_channel_channel_2_delay_2_time != -1 -> Chart_model_channel_channel_2_delay_2_time := Chart_model_channel_channel_2_delay_2_time + 0.1;
    Chart_model_channel_channel_3_delay_2_time != -1 -> Chart_model_channel_channel_3_delay_2_time := Chart_model_channel_channel_3_delay_2_time + 0.1;
    Chart_model_channel_channel_1_delay_2_time != -1 -> Chart_model_channel_channel_1_delay_2_time := Chart_model_channel_channel_1_delay_2_time + 0.1;
    Chart_model_channel_channel_4_delay_2_time != -1 -> Chart_model_channel_channel_4_delay_2_time := Chart_model_channel_channel_4_delay_2_time + 0.1;
    Chart_model_channel_channel_5_delay_2_time != -1 -> Chart_model_channel_channel_5_delay_2_time := Chart_model_channel_channel_5_delay_2_time + 0.1;
    Chart_model_channel_channel_1_delay_1_time != -1 -> Chart_model_channel_channel_1_delay_1_time := Chart_model_channel_channel_1_delay_1_time + 0.1;
    Chart_model_channel_channel_3_delay_1_time != -1 -> Chart_model_channel_channel_3_delay_1_time := Chart_model_channel_channel_3_delay_1_time + 0.1;
    Chart_model_channel_channel_4_delay_1_time != -1 -> Chart_model_channel_channel_4_delay_1_time := Chart_model_channel_channel_4_delay_1_time + 0.1;
    Chart_model_channel_channel_5_delay_1_time != -1 -> Chart_model_channel_channel_5_delay_1_time := Chart_model_channel_channel_5_delay_1_time + 0.1;
    Chart_model_RTPS_Writer_Writer_repair_must_repair_time != -1 -> Chart_model_RTPS_Writer_Writer_repair_must_repair_time := Chart_model_RTPS_Writer_Writer_repair_must_repair_time + 0.1;
    Chart_model_channel_channel_2_delay_1_time != -1 -> Chart_model_channel_channel_2_delay_1_time := Chart_model_channel_channel_2_delay_1_time + 0.1;
    Chart_model_channel_Acknack_1_delay_time != -1 -> Chart_model_channel_Acknack_1_delay_time := Chart_model_channel_Acknack_1_delay_time + 0.1;
    Chart_model_channel_Heartbeat_delay_time != -1 -> Chart_model_channel_Heartbeat_delay_time := Chart_model_channel_Heartbeat_delay_time + 0.1;
    Chart_model_channel_Acknack_2_delay_time != -1 -> Chart_model_channel_Acknack_2_delay_time := Chart_model_channel_Acknack_2_delay_time + 0.1
  )**
end
endmodule
module DDS_Writer():
begin
  start_DDS_Writer?;
  DDS_WriterEL := [];
  WHC_in?WHC;
  flag := 0;
  cachechanges := [100,200,300,400,500];
  i := 1;
  first_SN := 1;
  last_SN := 0;
  y := uniform(0,1);
  d := y;
  DDS_Writer_st := "DDS_Writer_add";
  DDS_Writer_add_time := 0;
  WHC_out!WHC;
  ch_x2_0_out!1;
  ch_x3_0_out!0;
  end_DDS_Writer?;
  (
    start_DDS_Writer?;
    WHC_in?WHC;
    DDS_Writer_add_done := 0;
    DDS_Writer_add_time >= d && i <= 5 -> (
      WHC[i - 1] := cachechanges[i - 1];
      first_SN := 1;
      last_SN := i;
      i := i + 1;
      y := uniform(0,1);
      d := y;
      DDS_Writer_st := "DDS_Writer_add";
      DDS_Writer_add_time := 0;
      DDS_Writer_add_done := 1
    );
    DDS_Writer_ret := DDS_Writer_add_done;
    WHC_out!WHC;
    ch_x2_0_out!1;
    ch_x3_0_out!last_SN;
    end_DDS_Writer?;
    wait(0.1);
    DDS_Writer_add_time != -1 -> DDS_Writer_add_time := DDS_Writer_add_time + 0.1
  )**
end
endmodule
module data_ctrl():
begin
  WHC := [0,0,0,0,0];
  RHC := [0,0,0,0,0];
  RHC2 := [0,0,0,0,0];
  (
    ch_x2_0_in!ch_x2_0 -->
      skip $
    ch_x2_0_out?ch_x2_0 -->
      skip $
    ch_x3_0_in!ch_x3_0 -->
      skip $
    ch_x3_0_out?ch_x3_0 -->
      skip $
    WHC_in!WHC -->
      skip $
    WHC_out?WHC -->
      skip $
    RHC_in!RHC -->
      skip $
    RHC_out?RHC -->
      skip $
    RHC2_in!RHC2 -->
      skip $
    RHC2_out?RHC2 -->
      skip
  )**
end
endmodule
module Continuous():
begin
  num := 2;
  (
    ch_x0_0!1 -->
      num := num - 1 $
    ch_x1_0!1 -->
      num := num - 1
  ){num > 0}**;
  (
    < & true> |> [] (
      ch_x0_0!1 -->
        skip,
      ch_x1_0!1 -->
        skip
    )
  )**
end
endmodule
system
order_ctrl = order_ctrl() ||
Chart = Chart() ||
DDS_Writer = DDS_Writer() ||
data_ctrl = data_ctrl() ||
Continuous = Continuous()
endsystem
