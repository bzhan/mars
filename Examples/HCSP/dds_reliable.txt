system ::= @writer; || @env; || @reader; || @heartbeat; || @ack;

writer ::=
	st1 := "announcing";
	st2 := "waiting";
	unsent := [];
	sent := 0;
	ack := 0;
	re_unsent := [];
	hb_count := 3;
	{
		if (st1 == "announcing" ){
			if (unsent != []){
				st1 := "pushing";
			}else if (ack == sent){
				hb_count := 3;
			}else{
				hb_count := hb_count - 1;
				if (hb_count == 0){
					heartbeat!;
					hb_count := 3;
				}else{
					skip;
				}
			}
		}else{
			if (unsent == []){
				st1 := "announcing";
				hb_count := 3;
			}else{
				n := bottom(unsent);
				unsent := get(unsent);
				send!n;
				sent := sent + 1;
			}
		}

		if (st2 == "waiting") {
			if (re_unsent != []) {
				st2 := "must_repair";
				resp_delay := 5;
			}else{
				skip;
			}
		}else if (st2 == "must_repair"){
			resp_delay := resp_delay - 1;
			if (resp_delay == 0) {
				st2 := "repairing";
			}else{
				skip;
			}
		}else{
			if (re_unsent == []) {
				st2 := "waiting";
			}else{
				n := bottom(re_unsent);
				re_unsent := get(re_unsent);
				send!n;
			}
		}

		add?ls;
		unsent := push(unsent, ls);

		ack?ls;
		ack := ack + len(ls);

		acknack?ls;
		re_unsent := push(re_unsent, ls);
	}*

env ::=
	add![3];
	add![4, 7];
	add![];
	add![5, 6];
	add![1];
	add![0, 2];
	{
		add![];
	}*

reader ::=
	data := [];
	{
		send?n;
		data := push(data, n);
	}*

heartbeat ::=
	{
		heartbeat?;
	}*

ack ::=
	ack![];
	acknack![];
	ack![];
	acknack![];
	ack![3];
	acknack![];
	ack![];
	acknack![];
	ack![];
	acknack![];
	ack![];
	acknack![];
	ack![7, 5];
	acknack![4];
	ack![];
	acknack![];
	ack![];
	acknack![];
	ack![6, 1];
	acknack![];
	ack![];
	acknack![];
	ack![];
	acknack![];
	ack![0, 2];
	acknack![];
	ack![];
	acknack![];
	ack![4];
	acknack![];
	{
		ack![];
		acknack![];
	}*
