System ::= @Train || @Control
Train ::=
  s := 0;
  v := 0;
  a := 0;
  (t := 0;
   <s_dot=v, v_dot=a, t_dot=1 & t < 0.125 && v >= 0>;
   wait (0.125 - t);
   Train2Control!v;
   Train2Control!s;
   Control2Train?a
  )**

Control ::=
  level := 2.5;
  next_seg_v := 0;
  (Train2Control?v;
   Train2Control?s;
   if level == 2.5 && s > 64000 then
     level := 3
   else skip endif;
   if level == 3 && s < 64000 / 2 then
     next_seg_v := 40
   else skip endif;
   s1 := s + v * 0.125 + 1 * 0.125 * 0.125 / 2;
   D := 64000 - s1;
   if D >= 100 * 100 / (2 * 1) then
     target_v := 100
   elif D >= 0 then
     target_v := sqrt (next_seg_v * next_seg_v + 2 * 1 * D)
   else
     target_v := 0
   endif;
   if v + 1 * 0.125 <= target_v then
     com_a := 1
   else
     s1 := s + v * 0.125;
     D := 64000 - s1;
     if D >= 100 * 100 / (2 * 1) then
       target_v := 100
     elif D >= 0 then
       target_v := sqrt (next_seg_v * next_seg_v + 2 * 1 * D)
     else
       target_v := 0
     endif;
     if v <= target_v then
       com_a := 0
     else
       com_a := -1
     endif
   endif;
   Control2Train!com_a
  )**
