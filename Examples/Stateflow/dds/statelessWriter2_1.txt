D ::= @M || @S1
M ::= num := 0; (num == 0 -> (E := "e"; EL := []; EL := push(EL, E); NL := []; NL := push(NL, 1); num := 1); num == 1 -> (BC1!E --> skip $ BR1?E --> EL := push(EL, E); NL := push(NL, 1); num := 1 $ BO1? --> num := num+1; NL := pop(NL); NL := push(NL, 1)); num == 2 -> (EL := pop(EL); NL := pop(NL); EL == [] -> num := 0; EL != [] -> (E := top(EL); num := top(NL))))**
S1 ::= a_S1 := 0; a_pushing := 0; a_idle := 0; a_S1 := 1; i := 3; cansend := 1; state_time := 0; a_idle := 1; heartbeat := 0; (BC1?E; if a_pushing == 1 then done := 0; i <= 0 && done == 0 -> (a_pushing := 0; state_time := 0; a_idle := 1; heartbeat := 0; done := 1); cansend == 1 && done == 0 -> (i := i-1; a_pushing := 0; a_pushing := 1; done := 1); done == 0 -> flag := 0 elif a_idle == 1 then done := 0; i > 0 && done == 0 -> (a_idle := 0; a_pushing := 1; done := 1); state_time >= 3 && done == 0 -> (heartbeat := 1; a_idle := 0; state_time := 0; a_idle := 1; heartbeat := 0; done := 1); done == 0 -> (flag := 1; state_time := state_time+2) else skip endif; BO1!)**