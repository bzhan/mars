%type: module

module Chart():
procedure exec_Chart begin
  Chart_ret := 0;
  if Chart_st == "Chart_S" then
    ChartEL != [] && top(ChartEL) == "E" -> (
      Chart_st == "Chart_S" -> (
        if Chart_S_A1_st == "Chart_S_A1_A1a" then
          Chart_S_A1_st == "Chart_S_A1_A1a" -> Chart_S_A1_st := ""
        elif Chart_S_A1_st == "Chart_S_A1_A1b" then
          Chart_S_A1_st == "Chart_S_A1_A1b" -> Chart_S_A1_st := ""
        else
          skip
        endif;
        Chart_st == "Chart_S" -> Chart_st := "";
        Chart_st == "" -> (
          Chart_st := "Chart_B";
          s := "enB";
          log("enB" + "\n")
        )
      )
    );
    Chart_ret := 0;
    if Chart_S_A1_st == "Chart_S_A1_A1a" then
      s := "ca";
      log("ca" + "\n");
      Chart_S_A1_st == "Chart_S_A1_A1a" -> (
        Chart_S_A1_st := "";
        ChartEL := push(ChartEL,"E");
        @exec_Chart;
        ChartEL := pop(ChartEL);
        Chart_S_A1_st == "" && Chart_st == "Chart_S" -> (
          s := "ta";
          log("ta" + "\n")
        );
        Chart_S_A1_st == "" && Chart_st == "Chart_S" -> (
          Chart_S_A1_st := "Chart_S_A1_A1b";
          s := "enA1b";
          log("enA1b" + "\n")
        )
      )
    elif Chart_S_A1_st == "Chart_S_A1_A1b" then
      skip
    else
      skip
    endif;
    Chart_ret := 0
  elif Chart_st == "Chart_B" then
    Chart_ret := 0
  else
    skip
  endif
end

begin
  ChartEL := [];
  Chart_st := "Chart_S";
  log("enS" + "\n");
  log("enA1" + "\n");
  Chart_S_A1_st := "Chart_S_A1_A1a";
  log("enA1a" + "\n");
  s := "enA2";
  log("enA2" + "\n");
  (
    @exec_Chart;
    wait(0.1)
  )**
end
endmodule
system
Chart = Chart()
endsystem
