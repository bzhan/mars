%type: module

module Chart():
procedure exec_Chart begin
  Chart_ret := 0;
  if (Chart_st == "Chart_A") {
    Chart_A_done := 0;
    if (data == 1) {
      data := 2;
      ChartEL := push(ChartEL,"E");
      @exec_Chart;
      ChartEL := pop(ChartEL);
      if (Chart_st == "Chart_A") {
        s := "ex_A";
        log("ex_A" + " %d\n",data);
        if (Chart_st == "Chart_A") {
          Chart_st := "";
        }
        if (Chart_st == "") {
          Chart_st := "Chart_B";
          s := "en_B";
          log("en_B" + " %d\n",data);
        }
        Chart_A_done := 1;
      }
    }
    if (Chart_st == "Chart_A" & Chart_A_done == 0 & ChartEL != [] & top(ChartEL) == "E") {
      if (Chart_st == "Chart_A") {
        s := "ex_A";
        log("ex_A" + " %d\n",data);
        if (Chart_st == "Chart_A") {
          Chart_st := "";
        }
        if (Chart_st == "") {
          Chart_st := "Chart_C";
          s := "en_C";
          log("en_C" + " %d\n",data);
        }
        Chart_A_done := 1;
      }
    }
    Chart_ret := Chart_A_done;
  } else if (Chart_st == "Chart_B") {
    Chart_ret := 0;
  } else if (Chart_st == "Chart_C") {
    Chart_ret := 0;
  }
end

begin
  ChartEL := [];
  data := 1;
  Chart_st := "Chart_A";
  s := "en_A";
  log("en_A" + " %d\n",1);
  {
    @exec_Chart;
    wait(0.1);
  }*
end
endmodule
system
Chart()
endsystem
