%type: module

module Chart():
begin
  ChartEL := [];
  Chart_st := "Chart_S";
  log("enS" + "\n");
  Chart_S_st := "Chart_S_A";
  log("enA" + "\n");
  (
    log("duS" + "\n");
    log("condInner" + "\n");
    if Chart_S_st == "Chart_S_A" then
      log("exA" + "\n");
      Chart_S_st == "Chart_S_A" -> Chart_S_st := ""
    elif Chart_S_st == "Chart_S_B" then
      log("exB" + "\n");
      Chart_S_st == "Chart_S_B" -> Chart_S_st := ""
    else
      skip
    endif;
    s := "tranInner";
    log("tranInner" + "\n");
    Chart_S_st == "" -> (
      Chart_S_st := "Chart_S_A";
      s := "enA";
      log("enA" + "\n")
    );
    Chart_ret := 1;
    wait(0.1)
  )**
end
endmodule
system
Chart = Chart()
endsystem
