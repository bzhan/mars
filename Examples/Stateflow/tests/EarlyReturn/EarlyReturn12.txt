%type: module

module Chart():
procedure exec_Chart begin
  Chart_ret := 0;
  if Chart_st == "Chart_A" then
    Chart_A_done := 0;
    ChartEL != [] && top(ChartEL) == "E" -> (
      Chart_st == "Chart_A" -> (
        Chart_st := "Chart_B";
        s := "enB";
        log("enB" + "\n");
        Chart_A_done := 1
      )
    );
    Chart_ret := Chart_A_done
  elif Chart_st == "Chart_B" then
    Chart_B_done := 0;
    Chart_st == "Chart_B" -> (
      Chart_st := "Chart_C";
      s := "enC";
      log("enC" + "\n");
      Chart_B_done := 1
    );
    Chart_ret := Chart_B_done
  elif Chart_st == "Chart_C" then
    Chart_ret := 0
  else
    skip
  endif
end

begin
  ChartEL := [];
  Chart_st := "Chart_A";
  ChartEL := push(ChartEL,"E");
  @exec_Chart;
  ChartEL := pop(ChartEL);
  Chart_st == "Chart_A" -> (
    s := "enA_done";
    log("enA_done" + "\n")
  );
  (
    @exec_Chart;
    wait(0.1)
  )**
end
endmodule
system
Chart = Chart()
endsystem
