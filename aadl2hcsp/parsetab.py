
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NAME NUMBER ATTACHED RIGHT_CURLY_BRA LEFT_CURLY_BRA COMP_OP LEFT_ANGLE_BRA RIGHT_ANGLE_BRA EQUALS PLUS MINUS TIMES DIVIDE REMAINDER LEFT_DIS RIGHT_DIS RANGE TRANSITIONS STATES VARIABLES INITIAL COMPLETE FINAL STATE INT FLOAT BOOLEAN DISPATCH ON IF ELIF ELSE WHILE END FOR IN COMPUTATION TIME_MS statement : statement statement  statement : NAME ATTACHED expression ";" statement : expression \';\' expression : expression PLUS expression\n                          | expression MINUS expression\n                          | expression  TIMES expression\n                          | expression DIVIDE expression\n                          | expression REMAINDER expression\n                          | expression EQUALS expression\n                          | expression LEFT_ANGLE_BRA expression\n                          | expression RIGHT_ANGLE_BRA expression\n                          | expression COMP_OP expression statement : \'!\' expression \';\' expression : \'(\' expression \')\'expression : NUMBER expression : NAME expression : expression \',\' expressiontype : INT\n                   | FLOAT\n                   | BOOLEAN\n                   statement : VARIABLES expression \':\' type \';\'\n                          | VARIABLES \':\' expression \';\'   state_var : state_var state_var\n                           | INITIAL\n                           | COMPLETE\n                           | FINAL time_unit : TIME_MS statement : STATES NAME \':\' state_var STATE  \';\' statement : TRANSITIONS NAME \':\' NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA \';\'  if_statement : IF \'(\' expression \')\' statement   else_statement : ELSE statement  elif_statement : ELIF  \'(\' expression \')\' statement\n                                | elif_statement elif_statement     statement : if_statement END IF \';\'\n                          | if_statement else_statement END IF \';\'\n                          | if_statement elif_statement else_statement END IF \';\'  statement :  WHILE \'(\' expression \')\' statement  END WHILE \';\'  statememt : FOR \'(\' expression IN expression RANGE expression \')\' LEFT_CURLY_BRA statement RIGHT_CURLY_BRA \';\'  statement : COMPUTATION \'(\' expression time_unit \')\' \';\'  statement : expression \'!\' \';\'\n                           | expression \'!\' \'(\' expression \',\' expression \')\' \';\' '
    
_lr_action_items = {'NAME':([0,1,4,5,6,7,11,14,15,16,18,19,20,21,22,23,24,25,26,27,31,37,39,40,42,44,45,56,60,65,66,71,77,83,87,88,91,92,96,98,99,100,103,105,106,108,112,113,114,116,117,119,],[2,2,29,29,32,33,29,2,29,-3,29,29,29,29,29,29,29,29,29,29,29,2,29,29,29,-40,29,-13,82,2,29,-2,-22,-34,2,2,29,-21,-35,2,2,2,-28,-36,2,-39,-41,115,-37,2,2,-29,]),'!':([0,1,2,3,13,14,16,29,37,44,46,47,48,49,50,51,52,53,54,55,56,65,69,71,77,83,87,88,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[4,4,-16,17,-15,4,-3,-16,4,-40,-17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,4,-14,-2,-22,-34,4,4,-21,-35,4,4,4,-28,-36,4,-39,-41,-37,4,4,-29,]),'VARIABLES':([0,1,14,16,37,44,56,65,71,77,83,87,88,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[5,5,5,-3,5,-40,-13,5,-2,-22,-34,5,5,-21,-35,5,5,5,-28,-36,5,-39,-41,-37,5,5,-29,]),'STATES':([0,1,14,16,37,44,56,65,71,77,83,87,88,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[6,6,6,-3,6,-40,-13,6,-2,-22,-34,6,6,-21,-35,6,6,6,-28,-36,6,-39,-41,-37,6,6,-29,]),'TRANSITIONS':([0,1,14,16,37,44,56,65,71,77,83,87,88,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[7,7,7,-3,7,-40,-13,7,-2,-22,-34,7,7,-21,-35,7,7,7,-28,-36,7,-39,-41,-37,7,7,-29,]),'WHILE':([0,1,14,16,37,44,56,65,71,77,83,87,88,92,96,98,99,100,103,105,106,107,108,112,114,116,117,119,],[10,10,10,-3,10,-40,-13,10,-2,-22,-34,10,10,-21,-35,10,10,10,-28,-36,10,111,-39,-41,-37,10,10,-29,]),'COMPUTATION':([0,1,14,16,37,44,56,65,71,77,83,87,88,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[12,12,12,-3,12,-40,-13,12,-2,-22,-34,12,12,-21,-35,12,12,12,-28,-36,12,-39,-41,-37,12,12,-29,]),'(':([0,1,4,5,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,37,38,39,40,42,44,45,56,65,66,71,77,83,87,88,91,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[11,11,11,11,39,40,11,42,11,11,-3,45,11,11,11,11,11,11,11,11,11,11,11,11,66,11,11,11,-40,11,-13,11,11,-2,-22,-34,11,11,11,-21,-35,11,11,11,-28,-36,11,-39,-41,-37,11,11,-29,]),'NUMBER':([0,1,4,5,11,14,15,16,18,19,20,21,22,23,24,25,26,27,31,37,39,40,42,44,45,56,65,66,71,77,83,87,88,91,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[13,13,13,13,13,13,13,-3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-40,13,-13,13,13,-2,-22,-34,13,13,13,-21,-35,13,13,13,-28,-36,13,-39,-41,-37,13,13,-29,]),'IF':([0,1,14,16,34,37,44,56,62,65,71,77,83,85,87,88,92,96,98,99,100,103,105,106,108,112,114,116,117,119,],[9,9,9,-3,61,9,-40,-13,84,9,-2,-22,-34,97,9,9,-21,-35,9,9,9,-28,-36,9,-39,-41,-37,9,9,-29,]),'$end':([1,14,16,44,56,71,77,83,92,96,103,105,108,112,114,119,],[0,-1,-3,-40,-13,-2,-22,-34,-21,-35,-28,-36,-39,-41,-37,-29,]),'ATTACHED':([2,],[15,]),';':([2,3,13,17,28,29,43,46,47,48,49,50,51,52,53,54,55,58,61,69,73,74,75,76,84,94,97,101,109,111,118,],[-16,16,-15,44,56,-16,71,-17,-4,-5,-6,-7,-8,-9,-10,-11,-12,77,83,-14,92,-18,-19,-20,96,103,105,108,112,114,119,]),'PLUS':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,19,-15,19,-16,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-14,19,19,19,19,]),'MINUS':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,20,-15,20,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-14,20,20,20,20,]),'TIMES':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,21,-15,21,-16,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-14,21,21,21,21,]),'DIVIDE':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,22,-15,22,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-14,22,22,22,22,]),'REMAINDER':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,23,-15,23,-16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-14,23,23,23,23,]),'EQUALS':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,24,-15,24,-16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-14,24,24,24,24,]),'LEFT_ANGLE_BRA':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,25,-15,25,-16,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-14,25,25,25,25,]),'RIGHT_ANGLE_BRA':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,26,-15,26,-16,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-14,26,26,26,26,]),'COMP_OP':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,27,-15,27,-16,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-14,27,27,27,27,]),',':([2,3,13,28,29,30,41,43,46,47,48,49,50,51,52,53,54,55,58,67,68,69,70,72,86,102,],[-16,18,-15,18,-16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-14,18,91,18,18,]),':':([5,13,29,30,32,33,46,47,48,49,50,51,52,53,54,55,69,],[31,-15,-16,57,59,60,-17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,]),'END':([8,14,16,35,44,56,64,65,71,77,83,92,96,99,100,103,105,108,112,114,119,],[34,-1,-3,62,-40,-13,85,-31,-2,-22,-34,-21,-35,-30,107,-28,-36,-39,-41,-37,-29,]),'ELSE':([8,14,16,36,44,56,63,71,77,83,92,96,99,103,105,106,108,112,114,119,],[37,-1,-3,37,-40,-13,-33,-2,-22,-34,-21,-35,-30,-28,-36,-32,-39,-41,-37,-29,]),'ELIF':([8,14,16,36,44,56,63,71,77,83,92,96,99,103,105,106,108,112,114,119,],[38,-1,-3,38,-40,-13,38,-2,-22,-34,-21,-35,-30,-28,-36,-32,-39,-41,-37,-29,]),')':([13,29,41,46,47,48,49,50,51,52,53,54,55,67,68,69,86,89,90,102,],[-15,-16,69,-17,-4,-5,-6,-7,-8,-9,-10,-11,-12,87,88,-14,98,101,-27,109,]),'TIME_MS':([13,29,46,47,48,49,50,51,52,53,54,55,69,70,],[-15,-16,-17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,90,]),'RIGHT_CURLY_BRA':([14,16,44,56,71,77,83,92,96,103,105,108,112,114,117,119,],[-1,-3,-40,-13,-2,-22,-34,-21,-35,-28,-36,-39,-41,-37,118,-29,]),'INT':([57,],[74,]),'FLOAT':([57,],[75,]),'BOOLEAN':([57,],[76,]),'INITIAL':([59,78,79,80,81,93,],[79,79,-24,-25,-26,79,]),'COMPLETE':([59,78,79,80,81,93,],[80,80,-24,-25,-26,80,]),'FINAL':([59,78,79,80,81,93,],[81,81,-24,-25,-26,81,]),'STATE':([78,79,80,81,93,],[94,-24,-25,-26,-23,]),'LEFT_DIS':([82,],[95,]),'ON':([95,],[104,]),'DISPATCH':([104,],[110,]),'RIGHT_DIS':([110,],[113,]),'LEFT_CURLY_BRA':([115,],[116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,1,14,37,65,87,88,98,99,100,106,116,117,],[1,14,14,65,14,99,100,106,14,14,14,117,14,]),'expression':([0,1,4,5,11,14,15,18,19,20,21,22,23,24,25,26,27,31,37,39,40,42,45,65,66,87,88,91,98,99,100,106,116,117,],[3,3,28,30,41,3,43,46,47,48,49,50,51,52,53,54,55,58,3,67,68,70,72,3,86,3,3,102,3,3,3,3,3,3,]),'if_statement':([0,1,14,37,65,87,88,98,99,100,106,116,117,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'else_statement':([8,36,],[35,64,]),'elif_statement':([8,36,63,],[36,63,63,]),'type':([57,],[73,]),'state_var':([59,78,93,],[78,93,93,]),'time_unit':([70,],[89,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement statement','statement',2,'p_statement_list','parserAnnex.py',150),
  ('statement -> NAME ATTACHED expression ;','statement',4,'p_statement_assign','parserAnnex.py',168),
  ('statement -> expression ;','statement',2,'p_statement_expr','parserAnnex.py',172),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parserAnnex.py',176),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parserAnnex.py',177),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parserAnnex.py',178),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parserAnnex.py',179),
  ('expression -> expression REMAINDER expression','expression',3,'p_expression_binop','parserAnnex.py',180),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','parserAnnex.py',181),
  ('expression -> expression LEFT_ANGLE_BRA expression','expression',3,'p_expression_binop','parserAnnex.py',182),
  ('expression -> expression RIGHT_ANGLE_BRA expression','expression',3,'p_expression_binop','parserAnnex.py',183),
  ('expression -> expression COMP_OP expression','expression',3,'p_expression_binop','parserAnnex.py',184),
  ('statement -> ! expression ;','statement',3,'p_expression_boolean','parserAnnex.py',212),
  ('expression -> ( expression )','expression',3,'p_expression_group','parserAnnex.py',216),
  ('expression -> NUMBER','expression',1,'p_expression_number','parserAnnex.py',220),
  ('expression -> NAME','expression',1,'p_expression_name','parserAnnex.py',223),
  ('expression -> expression , expression','expression',3,'p_expression_namelist','parserAnnex.py',227),
  ('type -> INT','type',1,'p_type_data','parserAnnex.py',240),
  ('type -> FLOAT','type',1,'p_type_data','parserAnnex.py',241),
  ('type -> BOOLEAN','type',1,'p_type_data','parserAnnex.py',242),
  ('statement -> VARIABLES expression : type ;','statement',5,'p_define_variable','parserAnnex.py',247),
  ('statement -> VARIABLES : expression ;','statement',4,'p_define_variable','parserAnnex.py',248),
  ('state_var -> state_var state_var','state_var',2,'p_state_list','parserAnnex.py',260),
  ('state_var -> INITIAL','state_var',1,'p_state_list','parserAnnex.py',261),
  ('state_var -> COMPLETE','state_var',1,'p_state_list','parserAnnex.py',262),
  ('state_var -> FINAL','state_var',1,'p_state_list','parserAnnex.py',263),
  ('time_unit -> TIME_MS','time_unit',1,'p_time_unit','parserAnnex.py',270),
  ('statement -> STATES NAME : state_var STATE ;','statement',6,'p_define_state','parserAnnex.py',273),
  ('statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;','statement',13,'p_define_transtion','parserAnnex.py',277),
  ('if_statement -> IF ( expression ) statement','if_statement',5,'p_if_substatement','parserAnnex.py',288),
  ('else_statement -> ELSE statement','else_statement',2,'p_else_substatement','parserAnnex.py',295),
  ('elif_statement -> ELIF ( expression ) statement','elif_statement',5,'p_elif_substatement','parserAnnex.py',302),
  ('elif_statement -> elif_statement elif_statement','elif_statement',2,'p_elif_substatement','parserAnnex.py',303),
  ('statement -> if_statement END IF ;','statement',4,'p_if_statement','parserAnnex.py',313),
  ('statement -> if_statement else_statement END IF ;','statement',5,'p_if_statement','parserAnnex.py',314),
  ('statement -> if_statement elif_statement else_statement END IF ;','statement',6,'p_if_statement','parserAnnex.py',315),
  ('statement -> WHILE ( expression ) statement END WHILE ;','statement',8,'p_while_statement','parserAnnex.py',324),
  ('statememt -> FOR ( expression IN expression RANGE expression ) LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;','statememt',12,'p_for_statement','parserAnnex.py',328),
  ('statement -> COMPUTATION ( expression time_unit ) ;','statement',6,'p_computaion_statement','parserAnnex.py',336),
  ('statement -> expression ! ;','statement',3,'p_communication_statement','parserAnnex.py',341),
  ('statement -> expression ! ( expression , expression ) ;','statement',8,'p_communication_statement','parserAnnex.py',342),
]
