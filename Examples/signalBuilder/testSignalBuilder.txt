testSignalBuilder ::= t := 0.0; SIGNALS_my_signal := 0.0; SIGNALS_your_signal := 0.0; signals := [[1.0, 1.0, 0.0],[1.5, 0.5, 0.0],[1.5, 0.5, -1.0],[2.0, 0.0, -1.0],[3.0, -1.0, -1.0],[4.0, 0.0, -1.0],[4.0, 0.0, 1.0],[5.0, 2.0, 1.0],[6.0, 0.0, 1.0],[6.0, 0.0, 0.0],[7.0, -2.0, 0.0],[8.0, 0.0, 0.0],[8.0, 0.0, -0.5],[9.0, -0.5, -0.5],[9.5, -0.5, -0.5],[9.5, -0.5, 0.0],[10.0, -0.5, 0.0]]; x2 := 0; x5 := 1; x0 := 0; skip; skip; (next_t_datas := bottom(signals); signals := get(signals); next_t := bottom(next_t_datas); next_datas := get(next_t_datas); next_SIGNALS_my_signal := bottom(next_datas); next_datas := get(next_datas); next_SIGNALS_your_signal := bottom(next_datas); next_datas := get(next_datas); t == next_t -> (SIGNALS_my_signal := next_SIGNALS_my_signal; SIGNALS_your_signal := next_SIGNALS_your_signal; next_t_datas := bottom(signals); signals := get(signals); next_t := bottom(next_t_datas); next_datas := get(next_t_datas); next_SIGNALS_my_signal := bottom(next_datas); next_datas := get(next_datas); next_SIGNALS_your_signal := bottom(next_datas); next_datas := get(next_datas)); slope_SIGNALS_my_signal := (next_SIGNALS_my_signal-SIGNALS_my_signal)/(next_t-t); slope_SIGNALS_your_signal := (next_SIGNALS_your_signal-SIGNALS_your_signal)/(next_t-t); <x2_dot = SIGNALS_your_signal-x2, x5_dot = SIGNALS_your_signal*x5, x0_dot = SIGNALS_my_signal-x0, SIGNALS_my_signal_dot = slope_SIGNALS_my_signal, SIGNALS_your_signal_dot = slope_SIGNALS_your_signal, t_dot = 1 & t < next_t>){len(signals) > 0}**
