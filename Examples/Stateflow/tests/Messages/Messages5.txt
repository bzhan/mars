%type: module

module Chart():
begin
  ChartEL := [];
  M := {data:3};
  Chart_M_queue := [];
  M1 := {data:2};
  Chart_M1_queue := [];
  Chart_st := "Chart_A";
  s := "en_A";
  log("en_A" + "\n");
  M1.data := 4;
  Chart_M1_queue := push(Chart_M1_queue,M1);
  M.data := 3;
  Chart_M_queue := push(Chart_M_queue,M);
  M1.data := 3;
  Chart_M1_queue := push(Chart_M1_queue,M1);
  M1.data := 2;
  Chart_M1_queue := push(Chart_M1_queue,M1);
  (
    Chart_ret := 0;
    if Chart_st == "Chart_A" then
      Chart_A_done := 0;
      if Chart_M_queue != [] then
        M := bottom(Chart_M_queue);
        Chart_M_queue := get(Chart_M_queue)
      else
        M := {}
      endif;
      M != {} && M.data == 3 -> (
        Chart_st == "Chart_A" -> (
          Chart_st := "Chart_B";
          s := "en_B";
          log("en_B" + "\n");
          y := 1;
          Chart_A_done := 1
        )
      );
      Chart_ret := Chart_A_done
    elif Chart_st == "Chart_B" then
      Chart_B_done := 0;
      if Chart_M1_queue != [] then
        M1 := bottom(Chart_M1_queue);
        Chart_M1_queue := get(Chart_M1_queue)
      else
        M1 := {}
      endif;
      M1 != {} && M1.data == 3 -> (
        Chart_st == "Chart_B" -> (
          Chart_st := "Chart_C";
          s := "en_C";
          log("en_C" + "\n");
          y := 2;
          Chart_B_done := 1
        )
      );
      Chart_ret := Chart_B_done
    elif Chart_st == "Chart_C" then
      Chart_C_done := 0;
      if Chart_M1_queue != [] then
        M1 := bottom(Chart_M1_queue);
        Chart_M1_queue := get(Chart_M1_queue)
      else
        M1 := {}
      endif;
      M1 != {} && M1.data == 4 -> (
        Chart_st == "Chart_C" -> (
          Chart_st := "Chart_D";
          s := "en_D";
          log("en_D" + "\n");
          Chart_C_done := 1
        )
      );
      Chart_ret := Chart_C_done
    elif Chart_st == "Chart_D" then
      Chart_D_done := 0;
      M1.data == 2 -> (
        Chart_st == "Chart_D" -> (
          Chart_st := "Chart_E";
          s := "en_E";
          log("en_E" + "\n");
          Chart_D_done := 1
        )
      );
      Chart_ret := Chart_D_done
    elif Chart_st == "Chart_E" then
      Chart_ret := 0
    else
      skip
    endif;
    wait(0.1)
  )**
end
endmodule
system
Chart = Chart()
endsystem
