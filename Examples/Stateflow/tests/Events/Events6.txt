%type: module

module Chart():
procedure exec_Chart begin
  Chart_ret := 0;
  if Chart_A_st == "Chart_A_A1" then
    Chart_A_st == "Chart_A_A1" -> (
      Chart_A_st := "";
      ChartEL := push(ChartEL,"E");
      @exec_Chart;
      ChartEL := pop(ChartEL);
      Chart_A_st == "" -> Chart_A_st := "Chart_A_A2"
    )
  elif Chart_A_st == "Chart_A_A2" then
    skip
  else
    skip
  endif;
  Chart_ret := 0;
  if Chart_B_st == "Chart_B_B1" then
    Chart_B_B1_done := 0;
    (ChartEL != [] && top(ChartEL) == "E") && x > 0 -> (
      x := x - 1;
      s := "a";
      log("a" + " %d\n",x);
      ChartEL := push(ChartEL,"E");
      @exec_Chart;
      ChartEL := pop(ChartEL);
      Chart_B_st == "Chart_B_B1" -> (
        Chart_B_st := "Chart_B_B2";
        s := "en_A2";
        log("en_A2" + " %d\n",x);
        Chart_B_B1_done := 1
      )
    );
    Chart_ret := Chart_B_B1_done
  elif Chart_B_st == "Chart_B_B2" then
    Chart_ret := 0
  else
    skip
  endif
end

begin
  ChartEL := [];
  Chart_A_st := "Chart_A_A1";
  x := 6;
  Chart_B_st := "Chart_B_B1";
  (
    @exec_Chart;
    wait(0.1)
  )**
end
endmodule
system
Chart = Chart()
endsystem
