Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement statement
Rule 2     statement -> NAME ATTACHED expression ;
Rule 3     statement -> expression ;
Rule 4     expression -> expression PLUS expression
Rule 5     expression -> expression MINUS expression
Rule 6     expression -> expression TIMES expression
Rule 7     expression -> expression DIVIDE expression
Rule 8     expression -> expression REMAINDER expression
Rule 9     expression -> expression EQUALS expression
Rule 10    expression -> expression LEFT_ANGLE_BRA expression
Rule 11    expression -> expression RIGHT_ANGLE_BRA expression
Rule 12    expression -> expression COMP_OP expression
Rule 13    statement -> ! expression ;
Rule 14    expression -> ( expression )
Rule 15    expression -> NUMBER
Rule 16    expression -> NAME
Rule 17    expression -> expression , expression
Rule 18    type -> INT
Rule 19    type -> FLOAT
Rule 20    type -> BOOLEAN
Rule 21    statement -> VARIABLES expression : type ;
Rule 22    statement -> VARIABLES : expression ;
Rule 23    state_var -> state_var state_var
Rule 24    state_var -> INITIAL
Rule 25    state_var -> COMPLETE
Rule 26    state_var -> FINAL
Rule 27    time_unit -> TIME_MS
Rule 28    statement -> STATES NAME : state_var STATE ;
Rule 29    statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
Rule 30    if_statement -> IF ( expression ) statement
Rule 31    else_statement -> ELSE statement
Rule 32    elif_statement -> ELIF ( expression ) statement
Rule 33    elif_statement -> elif_statement elif_statement
Rule 34    statement -> if_statement END IF ;
Rule 35    statement -> if_statement else_statement END IF ;
Rule 36    statement -> if_statement elif_statement else_statement END IF ;
Rule 37    statement -> WHILE ( expression ) statement END WHILE ;
Rule 38    statememt -> FOR ( expression IN expression RANGE expression ) LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
Rule 39    statement -> COMPUTATION ( expression time_unit ) ;
Rule 40    statement -> expression ! ;
Rule 41    statement -> expression ! ( expression , expression ) ;

Terminals, with rules where they appear

!                    : 13 40 41
(                    : 14 30 32 37 38 39 41
)                    : 14 30 32 37 38 39 41
,                    : 17 41
:                    : 21 22 28 29
;                    : 2 3 13 21 22 28 29 34 35 36 37 38 39 40 41
ATTACHED             : 2
BOOLEAN              : 20
COMPLETE             : 25
COMPUTATION          : 39
COMP_OP              : 12
DISPATCH             : 29
DIVIDE               : 7
ELIF                 : 32
ELSE                 : 31
END                  : 34 35 36 37
EQUALS               : 9
FINAL                : 26
FLOAT                : 19
FOR                  : 38
IF                   : 30 34 35 36
IN                   : 38
INITIAL              : 24
INT                  : 18
LEFT_ANGLE_BRA       : 10
LEFT_CURLY_BRA       : 29 38
LEFT_DIS             : 29
MINUS                : 5
NAME                 : 2 16 28 29 29 29
NUMBER               : 15
ON                   : 29
PLUS                 : 4
RANGE                : 38
REMAINDER            : 8
RIGHT_ANGLE_BRA      : 11
RIGHT_CURLY_BRA      : 29 38
RIGHT_DIS            : 29
STATE                : 28
STATES               : 28
TIMES                : 6
TIME_MS              : 27
TRANSITIONS          : 29
VARIABLES            : 21 22
WHILE                : 37 37
error                : 

Nonterminals, with rules where they appear

elif_statement       : 33 33 36
else_statement       : 35 36
expression           : 2 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 14 17 17 21 22 30 32 37 38 38 38 39 40 41 41 41
if_statement         : 34 35 36
state_var            : 23 23 28
statememt            : 
statement            : 1 1 29 30 31 32 37 38 0
time_unit            : 39
type                 : 21

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    statement                      shift and go to state 1
    expression                     shift and go to state 3
    if_statement                   shift and go to state 8

state 1

    (0) S' -> statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    statement                      shift and go to state 14
    expression                     shift and go to state 3
    if_statement                   shift and go to state 8

state 2

    (2) statement -> NAME . ATTACHED expression ;
    (16) expression -> NAME .

    ATTACHED        shift and go to state 15
    ;               reduce using rule 16 (expression -> NAME .)
    !               reduce using rule 16 (expression -> NAME .)
    PLUS            reduce using rule 16 (expression -> NAME .)
    MINUS           reduce using rule 16 (expression -> NAME .)
    TIMES           reduce using rule 16 (expression -> NAME .)
    DIVIDE          reduce using rule 16 (expression -> NAME .)
    REMAINDER       reduce using rule 16 (expression -> NAME .)
    EQUALS          reduce using rule 16 (expression -> NAME .)
    LEFT_ANGLE_BRA  reduce using rule 16 (expression -> NAME .)
    RIGHT_ANGLE_BRA reduce using rule 16 (expression -> NAME .)
    COMP_OP         reduce using rule 16 (expression -> NAME .)
    ,               reduce using rule 16 (expression -> NAME .)


state 3

    (3) statement -> expression . ;
    (40) statement -> expression . ! ;
    (41) statement -> expression . ! ( expression , expression ) ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    ;               shift and go to state 16
    !               shift and go to state 17
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 4

    (13) statement -> ! . expression ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 28

state 5

    (21) statement -> VARIABLES . expression : type ;
    (22) statement -> VARIABLES . : expression ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    :               shift and go to state 31
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 30

state 6

    (28) statement -> STATES . NAME : state_var STATE ;

    NAME            shift and go to state 32


state 7

    (29) statement -> TRANSITIONS . NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    NAME            shift and go to state 33


state 8

    (34) statement -> if_statement . END IF ;
    (35) statement -> if_statement . else_statement END IF ;
    (36) statement -> if_statement . elif_statement else_statement END IF ;
    (31) else_statement -> . ELSE statement
    (32) elif_statement -> . ELIF ( expression ) statement
    (33) elif_statement -> . elif_statement elif_statement

    END             shift and go to state 34
    ELSE            shift and go to state 37
    ELIF            shift and go to state 38

    else_statement                 shift and go to state 35
    elif_statement                 shift and go to state 36

state 9

    (30) if_statement -> IF . ( expression ) statement

    (               shift and go to state 39


state 10

    (37) statement -> WHILE . ( expression ) statement END WHILE ;

    (               shift and go to state 40


state 11

    (14) expression -> ( . expression )
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 41

state 12

    (39) statement -> COMPUTATION . ( expression time_unit ) ;

    (               shift and go to state 42


state 13

    (15) expression -> NUMBER .

    ;               reduce using rule 15 (expression -> NUMBER .)
    !               reduce using rule 15 (expression -> NUMBER .)
    PLUS            reduce using rule 15 (expression -> NUMBER .)
    MINUS           reduce using rule 15 (expression -> NUMBER .)
    TIMES           reduce using rule 15 (expression -> NUMBER .)
    DIVIDE          reduce using rule 15 (expression -> NUMBER .)
    REMAINDER       reduce using rule 15 (expression -> NUMBER .)
    EQUALS          reduce using rule 15 (expression -> NUMBER .)
    LEFT_ANGLE_BRA  reduce using rule 15 (expression -> NUMBER .)
    RIGHT_ANGLE_BRA reduce using rule 15 (expression -> NUMBER .)
    COMP_OP         reduce using rule 15 (expression -> NUMBER .)
    ,               reduce using rule 15 (expression -> NUMBER .)
    :               reduce using rule 15 (expression -> NUMBER .)
    )               reduce using rule 15 (expression -> NUMBER .)
    TIME_MS         reduce using rule 15 (expression -> NUMBER .)


state 14

    (1) statement -> statement statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for VARIABLES resolved as shift
  ! shift/reduce conflict for STATES resolved as shift
  ! shift/reduce conflict for TRANSITIONS resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COMPUTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 1 (statement -> statement statement .)
    END             reduce using rule 1 (statement -> statement statement .)
    ELSE            reduce using rule 1 (statement -> statement statement .)
    ELIF            reduce using rule 1 (statement -> statement statement .)
    RIGHT_CURLY_BRA reduce using rule 1 (statement -> statement statement .)
    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

  ! NAME            [ reduce using rule 1 (statement -> statement statement .) ]
  ! !               [ reduce using rule 1 (statement -> statement statement .) ]
  ! VARIABLES       [ reduce using rule 1 (statement -> statement statement .) ]
  ! STATES          [ reduce using rule 1 (statement -> statement statement .) ]
  ! TRANSITIONS     [ reduce using rule 1 (statement -> statement statement .) ]
  ! WHILE           [ reduce using rule 1 (statement -> statement statement .) ]
  ! COMPUTATION     [ reduce using rule 1 (statement -> statement statement .) ]
  ! (               [ reduce using rule 1 (statement -> statement statement .) ]
  ! NUMBER          [ reduce using rule 1 (statement -> statement statement .) ]
  ! IF              [ reduce using rule 1 (statement -> statement statement .) ]

    statement                      shift and go to state 14
    expression                     shift and go to state 3
    if_statement                   shift and go to state 8

state 15

    (2) statement -> NAME ATTACHED . expression ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 43

state 16

    (3) statement -> expression ; .

    NAME            reduce using rule 3 (statement -> expression ; .)
    !               reduce using rule 3 (statement -> expression ; .)
    VARIABLES       reduce using rule 3 (statement -> expression ; .)
    STATES          reduce using rule 3 (statement -> expression ; .)
    TRANSITIONS     reduce using rule 3 (statement -> expression ; .)
    WHILE           reduce using rule 3 (statement -> expression ; .)
    COMPUTATION     reduce using rule 3 (statement -> expression ; .)
    (               reduce using rule 3 (statement -> expression ; .)
    NUMBER          reduce using rule 3 (statement -> expression ; .)
    IF              reduce using rule 3 (statement -> expression ; .)
    $end            reduce using rule 3 (statement -> expression ; .)
    END             reduce using rule 3 (statement -> expression ; .)
    ELSE            reduce using rule 3 (statement -> expression ; .)
    ELIF            reduce using rule 3 (statement -> expression ; .)
    RIGHT_CURLY_BRA reduce using rule 3 (statement -> expression ; .)


state 17

    (40) statement -> expression ! . ;
    (41) statement -> expression ! . ( expression , expression ) ;

    ;               shift and go to state 44
    (               shift and go to state 45


state 18

    (17) expression -> expression , . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 46

state 19

    (4) expression -> expression PLUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 47

state 20

    (5) expression -> expression MINUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 48

state 21

    (6) expression -> expression TIMES . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 49

state 22

    (7) expression -> expression DIVIDE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 50

state 23

    (8) expression -> expression REMAINDER . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 51

state 24

    (9) expression -> expression EQUALS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 52

state 25

    (10) expression -> expression LEFT_ANGLE_BRA . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 53

state 26

    (11) expression -> expression RIGHT_ANGLE_BRA . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 54

state 27

    (12) expression -> expression COMP_OP . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 55

state 28

    (13) statement -> ! expression . ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    ;               shift and go to state 56
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 29

    (16) expression -> NAME .

    ;               reduce using rule 16 (expression -> NAME .)
    PLUS            reduce using rule 16 (expression -> NAME .)
    MINUS           reduce using rule 16 (expression -> NAME .)
    TIMES           reduce using rule 16 (expression -> NAME .)
    DIVIDE          reduce using rule 16 (expression -> NAME .)
    REMAINDER       reduce using rule 16 (expression -> NAME .)
    EQUALS          reduce using rule 16 (expression -> NAME .)
    LEFT_ANGLE_BRA  reduce using rule 16 (expression -> NAME .)
    RIGHT_ANGLE_BRA reduce using rule 16 (expression -> NAME .)
    COMP_OP         reduce using rule 16 (expression -> NAME .)
    ,               reduce using rule 16 (expression -> NAME .)
    :               reduce using rule 16 (expression -> NAME .)
    )               reduce using rule 16 (expression -> NAME .)
    !               reduce using rule 16 (expression -> NAME .)
    TIME_MS         reduce using rule 16 (expression -> NAME .)


state 30

    (21) statement -> VARIABLES expression . : type ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    :               shift and go to state 57
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 31

    (22) statement -> VARIABLES : . expression ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 58

state 32

    (28) statement -> STATES NAME . : state_var STATE ;

    :               shift and go to state 59


state 33

    (29) statement -> TRANSITIONS NAME . : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    :               shift and go to state 60


state 34

    (34) statement -> if_statement END . IF ;

    IF              shift and go to state 61


state 35

    (35) statement -> if_statement else_statement . END IF ;

    END             shift and go to state 62


state 36

    (36) statement -> if_statement elif_statement . else_statement END IF ;
    (33) elif_statement -> elif_statement . elif_statement
    (31) else_statement -> . ELSE statement
    (32) elif_statement -> . ELIF ( expression ) statement
    (33) elif_statement -> . elif_statement elif_statement

    ELSE            shift and go to state 37
    ELIF            shift and go to state 38

    elif_statement                 shift and go to state 63
    else_statement                 shift and go to state 64

state 37

    (31) else_statement -> ELSE . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    statement                      shift and go to state 65
    expression                     shift and go to state 3
    if_statement                   shift and go to state 8

state 38

    (32) elif_statement -> ELIF . ( expression ) statement

    (               shift and go to state 66


state 39

    (30) if_statement -> IF ( . expression ) statement
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 67

state 40

    (37) statement -> WHILE ( . expression ) statement END WHILE ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 68

state 41

    (14) expression -> ( expression . )
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    )               shift and go to state 69
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 42

    (39) statement -> COMPUTATION ( . expression time_unit ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 70

state 43

    (2) statement -> NAME ATTACHED expression . ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    ;               shift and go to state 71
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 44

    (40) statement -> expression ! ; .

    NAME            reduce using rule 40 (statement -> expression ! ; .)
    !               reduce using rule 40 (statement -> expression ! ; .)
    VARIABLES       reduce using rule 40 (statement -> expression ! ; .)
    STATES          reduce using rule 40 (statement -> expression ! ; .)
    TRANSITIONS     reduce using rule 40 (statement -> expression ! ; .)
    WHILE           reduce using rule 40 (statement -> expression ! ; .)
    COMPUTATION     reduce using rule 40 (statement -> expression ! ; .)
    (               reduce using rule 40 (statement -> expression ! ; .)
    NUMBER          reduce using rule 40 (statement -> expression ! ; .)
    IF              reduce using rule 40 (statement -> expression ! ; .)
    $end            reduce using rule 40 (statement -> expression ! ; .)
    END             reduce using rule 40 (statement -> expression ! ; .)
    ELSE            reduce using rule 40 (statement -> expression ! ; .)
    ELIF            reduce using rule 40 (statement -> expression ! ; .)
    RIGHT_CURLY_BRA reduce using rule 40 (statement -> expression ! ; .)


state 45

    (41) statement -> expression ! ( . expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 72

state 46

    (17) expression -> expression , expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 17 (expression -> expression , expression .)
    !               reduce using rule 17 (expression -> expression , expression .)
    :               reduce using rule 17 (expression -> expression , expression .)
    )               reduce using rule 17 (expression -> expression , expression .)
    TIME_MS         reduce using rule 17 (expression -> expression , expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 17 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression , expression .) ]
  ! REMAINDER       [ reduce using rule 17 (expression -> expression , expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression , expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 17 (expression -> expression , expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 17 (expression -> expression , expression .) ]
  ! COMP_OP         [ reduce using rule 17 (expression -> expression , expression .) ]
  ! ,               [ reduce using rule 17 (expression -> expression , expression .) ]


state 47

    (4) expression -> expression PLUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 4 (expression -> expression PLUS expression .)
    !               reduce using rule 4 (expression -> expression PLUS expression .)
    :               reduce using rule 4 (expression -> expression PLUS expression .)
    )               reduce using rule 4 (expression -> expression PLUS expression .)
    TIME_MS         reduce using rule 4 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! REMAINDER       [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! COMP_OP         [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! ,               [ reduce using rule 4 (expression -> expression PLUS expression .) ]


state 48

    (5) expression -> expression MINUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 5 (expression -> expression MINUS expression .)
    !               reduce using rule 5 (expression -> expression MINUS expression .)
    :               reduce using rule 5 (expression -> expression MINUS expression .)
    )               reduce using rule 5 (expression -> expression MINUS expression .)
    TIME_MS         reduce using rule 5 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! REMAINDER       [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! COMP_OP         [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! ,               [ reduce using rule 5 (expression -> expression MINUS expression .) ]


state 49

    (6) expression -> expression TIMES expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 6 (expression -> expression TIMES expression .)
    !               reduce using rule 6 (expression -> expression TIMES expression .)
    :               reduce using rule 6 (expression -> expression TIMES expression .)
    )               reduce using rule 6 (expression -> expression TIMES expression .)
    TIME_MS         reduce using rule 6 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! REMAINDER       [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! COMP_OP         [ reduce using rule 6 (expression -> expression TIMES expression .) ]
  ! ,               [ reduce using rule 6 (expression -> expression TIMES expression .) ]


state 50

    (7) expression -> expression DIVIDE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 7 (expression -> expression DIVIDE expression .)
    !               reduce using rule 7 (expression -> expression DIVIDE expression .)
    :               reduce using rule 7 (expression -> expression DIVIDE expression .)
    )               reduce using rule 7 (expression -> expression DIVIDE expression .)
    TIME_MS         reduce using rule 7 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! REMAINDER       [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! COMP_OP         [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! ,               [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]


state 51

    (8) expression -> expression REMAINDER expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 8 (expression -> expression REMAINDER expression .)
    !               reduce using rule 8 (expression -> expression REMAINDER expression .)
    :               reduce using rule 8 (expression -> expression REMAINDER expression .)
    )               reduce using rule 8 (expression -> expression REMAINDER expression .)
    TIME_MS         reduce using rule 8 (expression -> expression REMAINDER expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! REMAINDER       [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! EQUALS          [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! COMP_OP         [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]
  ! ,               [ reduce using rule 8 (expression -> expression REMAINDER expression .) ]


state 52

    (9) expression -> expression EQUALS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 9 (expression -> expression EQUALS expression .)
    !               reduce using rule 9 (expression -> expression EQUALS expression .)
    :               reduce using rule 9 (expression -> expression EQUALS expression .)
    )               reduce using rule 9 (expression -> expression EQUALS expression .)
    TIME_MS         reduce using rule 9 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! REMAINDER       [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! COMP_OP         [ reduce using rule 9 (expression -> expression EQUALS expression .) ]
  ! ,               [ reduce using rule 9 (expression -> expression EQUALS expression .) ]


state 53

    (10) expression -> expression LEFT_ANGLE_BRA expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .)
    !               reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .)
    :               reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .)
    )               reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .)
    TIME_MS         reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! REMAINDER       [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! EQUALS          [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! COMP_OP         [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]
  ! ,               [ reduce using rule 10 (expression -> expression LEFT_ANGLE_BRA expression .) ]


state 54

    (11) expression -> expression RIGHT_ANGLE_BRA expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .)
    !               reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .)
    :               reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .)
    )               reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .)
    TIME_MS         reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! REMAINDER       [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! EQUALS          [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! COMP_OP         [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]
  ! ,               [ reduce using rule 11 (expression -> expression RIGHT_ANGLE_BRA expression .) ]


state 55

    (12) expression -> expression COMP_OP expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    ;               reduce using rule 12 (expression -> expression COMP_OP expression .)
    !               reduce using rule 12 (expression -> expression COMP_OP expression .)
    :               reduce using rule 12 (expression -> expression COMP_OP expression .)
    )               reduce using rule 12 (expression -> expression COMP_OP expression .)
    TIME_MS         reduce using rule 12 (expression -> expression COMP_OP expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! PLUS            [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! TIMES           [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! REMAINDER       [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! EQUALS          [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! COMP_OP         [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]
  ! ,               [ reduce using rule 12 (expression -> expression COMP_OP expression .) ]


state 56

    (13) statement -> ! expression ; .

    NAME            reduce using rule 13 (statement -> ! expression ; .)
    !               reduce using rule 13 (statement -> ! expression ; .)
    VARIABLES       reduce using rule 13 (statement -> ! expression ; .)
    STATES          reduce using rule 13 (statement -> ! expression ; .)
    TRANSITIONS     reduce using rule 13 (statement -> ! expression ; .)
    WHILE           reduce using rule 13 (statement -> ! expression ; .)
    COMPUTATION     reduce using rule 13 (statement -> ! expression ; .)
    (               reduce using rule 13 (statement -> ! expression ; .)
    NUMBER          reduce using rule 13 (statement -> ! expression ; .)
    IF              reduce using rule 13 (statement -> ! expression ; .)
    $end            reduce using rule 13 (statement -> ! expression ; .)
    END             reduce using rule 13 (statement -> ! expression ; .)
    ELSE            reduce using rule 13 (statement -> ! expression ; .)
    ELIF            reduce using rule 13 (statement -> ! expression ; .)
    RIGHT_CURLY_BRA reduce using rule 13 (statement -> ! expression ; .)


state 57

    (21) statement -> VARIABLES expression : . type ;
    (18) type -> . INT
    (19) type -> . FLOAT
    (20) type -> . BOOLEAN

    INT             shift and go to state 74
    FLOAT           shift and go to state 75
    BOOLEAN         shift and go to state 76

    type                           shift and go to state 73

state 58

    (22) statement -> VARIABLES : expression . ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    ;               shift and go to state 77
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 59

    (28) statement -> STATES NAME : . state_var STATE ;
    (23) state_var -> . state_var state_var
    (24) state_var -> . INITIAL
    (25) state_var -> . COMPLETE
    (26) state_var -> . FINAL

    INITIAL         shift and go to state 79
    COMPLETE        shift and go to state 80
    FINAL           shift and go to state 81

    state_var                      shift and go to state 78

state 60

    (29) statement -> TRANSITIONS NAME : . NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    NAME            shift and go to state 82


state 61

    (34) statement -> if_statement END IF . ;

    ;               shift and go to state 83


state 62

    (35) statement -> if_statement else_statement END . IF ;

    IF              shift and go to state 84


state 63

    (33) elif_statement -> elif_statement elif_statement .
    (33) elif_statement -> elif_statement . elif_statement
    (32) elif_statement -> . ELIF ( expression ) statement
    (33) elif_statement -> . elif_statement elif_statement

  ! shift/reduce conflict for ELIF resolved as shift
    ELSE            reduce using rule 33 (elif_statement -> elif_statement elif_statement .)
    ELIF            shift and go to state 38

  ! ELIF            [ reduce using rule 33 (elif_statement -> elif_statement elif_statement .) ]

    elif_statement                 shift and go to state 63

state 64

    (36) statement -> if_statement elif_statement else_statement . END IF ;

    END             shift and go to state 85


state 65

    (31) else_statement -> ELSE statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    END             reduce using rule 31 (else_statement -> ELSE statement .)
    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    statement                      shift and go to state 14
    expression                     shift and go to state 3
    if_statement                   shift and go to state 8

state 66

    (32) elif_statement -> ELIF ( . expression ) statement
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 86

state 67

    (30) if_statement -> IF ( expression . ) statement
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    )               shift and go to state 87
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 68

    (37) statement -> WHILE ( expression . ) statement END WHILE ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    )               shift and go to state 88
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 69

    (14) expression -> ( expression ) .

    ;               reduce using rule 14 (expression -> ( expression ) .)
    !               reduce using rule 14 (expression -> ( expression ) .)
    PLUS            reduce using rule 14 (expression -> ( expression ) .)
    MINUS           reduce using rule 14 (expression -> ( expression ) .)
    TIMES           reduce using rule 14 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 14 (expression -> ( expression ) .)
    REMAINDER       reduce using rule 14 (expression -> ( expression ) .)
    EQUALS          reduce using rule 14 (expression -> ( expression ) .)
    LEFT_ANGLE_BRA  reduce using rule 14 (expression -> ( expression ) .)
    RIGHT_ANGLE_BRA reduce using rule 14 (expression -> ( expression ) .)
    COMP_OP         reduce using rule 14 (expression -> ( expression ) .)
    ,               reduce using rule 14 (expression -> ( expression ) .)
    :               reduce using rule 14 (expression -> ( expression ) .)
    )               reduce using rule 14 (expression -> ( expression ) .)
    TIME_MS         reduce using rule 14 (expression -> ( expression ) .)


state 70

    (39) statement -> COMPUTATION ( expression . time_unit ) ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression
    (27) time_unit -> . TIME_MS

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18
    TIME_MS         shift and go to state 90

    time_unit                      shift and go to state 89

state 71

    (2) statement -> NAME ATTACHED expression ; .

    NAME            reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    !               reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    VARIABLES       reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    STATES          reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    TRANSITIONS     reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    WHILE           reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    COMPUTATION     reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    (               reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    NUMBER          reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    IF              reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    $end            reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    END             reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    ELSE            reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    ELIF            reduce using rule 2 (statement -> NAME ATTACHED expression ; .)
    RIGHT_CURLY_BRA reduce using rule 2 (statement -> NAME ATTACHED expression ; .)


state 72

    (41) statement -> expression ! ( expression . , expression ) ;
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    ,               shift and go to state 91
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27


state 73

    (21) statement -> VARIABLES expression : type . ;

    ;               shift and go to state 92


state 74

    (18) type -> INT .

    ;               reduce using rule 18 (type -> INT .)


state 75

    (19) type -> FLOAT .

    ;               reduce using rule 19 (type -> FLOAT .)


state 76

    (20) type -> BOOLEAN .

    ;               reduce using rule 20 (type -> BOOLEAN .)


state 77

    (22) statement -> VARIABLES : expression ; .

    NAME            reduce using rule 22 (statement -> VARIABLES : expression ; .)
    !               reduce using rule 22 (statement -> VARIABLES : expression ; .)
    VARIABLES       reduce using rule 22 (statement -> VARIABLES : expression ; .)
    STATES          reduce using rule 22 (statement -> VARIABLES : expression ; .)
    TRANSITIONS     reduce using rule 22 (statement -> VARIABLES : expression ; .)
    WHILE           reduce using rule 22 (statement -> VARIABLES : expression ; .)
    COMPUTATION     reduce using rule 22 (statement -> VARIABLES : expression ; .)
    (               reduce using rule 22 (statement -> VARIABLES : expression ; .)
    NUMBER          reduce using rule 22 (statement -> VARIABLES : expression ; .)
    IF              reduce using rule 22 (statement -> VARIABLES : expression ; .)
    $end            reduce using rule 22 (statement -> VARIABLES : expression ; .)
    END             reduce using rule 22 (statement -> VARIABLES : expression ; .)
    ELSE            reduce using rule 22 (statement -> VARIABLES : expression ; .)
    ELIF            reduce using rule 22 (statement -> VARIABLES : expression ; .)
    RIGHT_CURLY_BRA reduce using rule 22 (statement -> VARIABLES : expression ; .)


state 78

    (28) statement -> STATES NAME : state_var . STATE ;
    (23) state_var -> state_var . state_var
    (23) state_var -> . state_var state_var
    (24) state_var -> . INITIAL
    (25) state_var -> . COMPLETE
    (26) state_var -> . FINAL

    STATE           shift and go to state 94
    INITIAL         shift and go to state 79
    COMPLETE        shift and go to state 80
    FINAL           shift and go to state 81

    state_var                      shift and go to state 93

state 79

    (24) state_var -> INITIAL .

    STATE           reduce using rule 24 (state_var -> INITIAL .)
    INITIAL         reduce using rule 24 (state_var -> INITIAL .)
    COMPLETE        reduce using rule 24 (state_var -> INITIAL .)
    FINAL           reduce using rule 24 (state_var -> INITIAL .)


state 80

    (25) state_var -> COMPLETE .

    STATE           reduce using rule 25 (state_var -> COMPLETE .)
    INITIAL         reduce using rule 25 (state_var -> COMPLETE .)
    COMPLETE        reduce using rule 25 (state_var -> COMPLETE .)
    FINAL           reduce using rule 25 (state_var -> COMPLETE .)


state 81

    (26) state_var -> FINAL .

    STATE           reduce using rule 26 (state_var -> FINAL .)
    INITIAL         reduce using rule 26 (state_var -> FINAL .)
    COMPLETE        reduce using rule 26 (state_var -> FINAL .)
    FINAL           reduce using rule 26 (state_var -> FINAL .)


state 82

    (29) statement -> TRANSITIONS NAME : NAME . LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    LEFT_DIS        shift and go to state 95


state 83

    (34) statement -> if_statement END IF ; .

    NAME            reduce using rule 34 (statement -> if_statement END IF ; .)
    !               reduce using rule 34 (statement -> if_statement END IF ; .)
    VARIABLES       reduce using rule 34 (statement -> if_statement END IF ; .)
    STATES          reduce using rule 34 (statement -> if_statement END IF ; .)
    TRANSITIONS     reduce using rule 34 (statement -> if_statement END IF ; .)
    WHILE           reduce using rule 34 (statement -> if_statement END IF ; .)
    COMPUTATION     reduce using rule 34 (statement -> if_statement END IF ; .)
    (               reduce using rule 34 (statement -> if_statement END IF ; .)
    NUMBER          reduce using rule 34 (statement -> if_statement END IF ; .)
    IF              reduce using rule 34 (statement -> if_statement END IF ; .)
    $end            reduce using rule 34 (statement -> if_statement END IF ; .)
    END             reduce using rule 34 (statement -> if_statement END IF ; .)
    ELSE            reduce using rule 34 (statement -> if_statement END IF ; .)
    ELIF            reduce using rule 34 (statement -> if_statement END IF ; .)
    RIGHT_CURLY_BRA reduce using rule 34 (statement -> if_statement END IF ; .)


state 84

    (35) statement -> if_statement else_statement END IF . ;

    ;               shift and go to state 96


state 85

    (36) statement -> if_statement elif_statement else_statement END . IF ;

    IF              shift and go to state 97


state 86

    (32) elif_statement -> ELIF ( expression . ) statement
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

    )               shift and go to state 98
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18


state 87

    (30) if_statement -> IF ( expression ) . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    expression                     shift and go to state 3
    statement                      shift and go to state 99
    if_statement                   shift and go to state 8

state 88

    (37) statement -> WHILE ( expression ) . statement END WHILE ;
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    expression                     shift and go to state 3
    statement                      shift and go to state 100
    if_statement                   shift and go to state 8

state 89

    (39) statement -> COMPUTATION ( expression time_unit . ) ;

    )               shift and go to state 101


state 90

    (27) time_unit -> TIME_MS .

    )               reduce using rule 27 (time_unit -> TIME_MS .)


state 91

    (41) statement -> expression ! ( expression , . expression ) ;
    (17) expression -> expression , . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression

    (               shift and go to state 11
    NUMBER          shift and go to state 13
    NAME            shift and go to state 29

    expression                     shift and go to state 102

state 92

    (21) statement -> VARIABLES expression : type ; .

    NAME            reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    !               reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    VARIABLES       reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    STATES          reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    TRANSITIONS     reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    WHILE           reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    COMPUTATION     reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    (               reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    NUMBER          reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    IF              reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    $end            reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    END             reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    ELSE            reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    ELIF            reduce using rule 21 (statement -> VARIABLES expression : type ; .)
    RIGHT_CURLY_BRA reduce using rule 21 (statement -> VARIABLES expression : type ; .)


state 93

    (23) state_var -> state_var state_var .
    (23) state_var -> state_var . state_var
    (23) state_var -> . state_var state_var
    (24) state_var -> . INITIAL
    (25) state_var -> . COMPLETE
    (26) state_var -> . FINAL

  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for COMPLETE resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
    STATE           reduce using rule 23 (state_var -> state_var state_var .)
    INITIAL         shift and go to state 79
    COMPLETE        shift and go to state 80
    FINAL           shift and go to state 81

  ! INITIAL         [ reduce using rule 23 (state_var -> state_var state_var .) ]
  ! COMPLETE        [ reduce using rule 23 (state_var -> state_var state_var .) ]
  ! FINAL           [ reduce using rule 23 (state_var -> state_var state_var .) ]

    state_var                      shift and go to state 93

state 94

    (28) statement -> STATES NAME : state_var STATE . ;

    ;               shift and go to state 103


state 95

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS . ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    ON              shift and go to state 104


state 96

    (35) statement -> if_statement else_statement END IF ; .

    NAME            reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    !               reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    VARIABLES       reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    STATES          reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    TRANSITIONS     reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    WHILE           reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    COMPUTATION     reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    (               reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    NUMBER          reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    IF              reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    $end            reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    END             reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    ELSE            reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    ELIF            reduce using rule 35 (statement -> if_statement else_statement END IF ; .)
    RIGHT_CURLY_BRA reduce using rule 35 (statement -> if_statement else_statement END IF ; .)


state 97

    (36) statement -> if_statement elif_statement else_statement END IF . ;

    ;               shift and go to state 105


state 98

    (32) elif_statement -> ELIF ( expression ) . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    expression                     shift and go to state 3
    statement                      shift and go to state 106
    if_statement                   shift and go to state 8

state 99

    (30) if_statement -> IF ( expression ) statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    END             reduce using rule 30 (if_statement -> IF ( expression ) statement .)
    ELSE            reduce using rule 30 (if_statement -> IF ( expression ) statement .)
    ELIF            reduce using rule 30 (if_statement -> IF ( expression ) statement .)
    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    expression                     shift and go to state 3
    statement                      shift and go to state 14
    if_statement                   shift and go to state 8

state 100

    (37) statement -> WHILE ( expression ) statement . END WHILE ;
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    END             shift and go to state 107
    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    expression                     shift and go to state 3
    statement                      shift and go to state 14
    if_statement                   shift and go to state 8

state 101

    (39) statement -> COMPUTATION ( expression time_unit ) . ;

    ;               shift and go to state 108


state 102

    (41) statement -> expression ! ( expression , expression . ) ;
    (17) expression -> expression , expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . REMAINDER expression
    (9) expression -> expression . EQUALS expression
    (10) expression -> expression . LEFT_ANGLE_BRA expression
    (11) expression -> expression . RIGHT_ANGLE_BRA expression
    (12) expression -> expression . COMP_OP expression
    (17) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LEFT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for RIGHT_ANGLE_BRA resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for , resolved as shift
    )               shift and go to state 109
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    REMAINDER       shift and go to state 23
    EQUALS          shift and go to state 24
    LEFT_ANGLE_BRA  shift and go to state 25
    RIGHT_ANGLE_BRA shift and go to state 26
    COMP_OP         shift and go to state 27
    ,               shift and go to state 18

  ! ,               [ reduce using rule 17 (expression -> expression , expression .) ]
  ! PLUS            [ reduce using rule 17 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression , expression .) ]
  ! REMAINDER       [ reduce using rule 17 (expression -> expression , expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression , expression .) ]
  ! LEFT_ANGLE_BRA  [ reduce using rule 17 (expression -> expression , expression .) ]
  ! RIGHT_ANGLE_BRA [ reduce using rule 17 (expression -> expression , expression .) ]
  ! COMP_OP         [ reduce using rule 17 (expression -> expression , expression .) ]


state 103

    (28) statement -> STATES NAME : state_var STATE ; .

    NAME            reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    !               reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    VARIABLES       reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    STATES          reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    TRANSITIONS     reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    WHILE           reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    COMPUTATION     reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    (               reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    NUMBER          reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    IF              reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    $end            reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    END             reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    ELSE            reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    ELIF            reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)
    RIGHT_CURLY_BRA reduce using rule 28 (statement -> STATES NAME : state_var STATE ; .)


state 104

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON . DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    DISPATCH        shift and go to state 110


state 105

    (36) statement -> if_statement elif_statement else_statement END IF ; .

    NAME            reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    !               reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    VARIABLES       reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    STATES          reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    TRANSITIONS     reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    WHILE           reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    COMPUTATION     reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    (               reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    NUMBER          reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    IF              reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    $end            reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    END             reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    ELSE            reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    ELIF            reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)
    RIGHT_CURLY_BRA reduce using rule 36 (statement -> if_statement elif_statement else_statement END IF ; .)


state 106

    (32) elif_statement -> ELIF ( expression ) statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    ELSE            reduce using rule 32 (elif_statement -> ELIF ( expression ) statement .)
    ELIF            reduce using rule 32 (elif_statement -> ELIF ( expression ) statement .)
    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    expression                     shift and go to state 3
    statement                      shift and go to state 14
    if_statement                   shift and go to state 8

state 107

    (37) statement -> WHILE ( expression ) statement END . WHILE ;

    WHILE           shift and go to state 111


state 108

    (39) statement -> COMPUTATION ( expression time_unit ) ; .

    NAME            reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    !               reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    VARIABLES       reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    STATES          reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    TRANSITIONS     reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    WHILE           reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    COMPUTATION     reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    (               reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    NUMBER          reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    IF              reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    $end            reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    END             reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    ELSE            reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    ELIF            reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)
    RIGHT_CURLY_BRA reduce using rule 39 (statement -> COMPUTATION ( expression time_unit ) ; .)


state 109

    (41) statement -> expression ! ( expression , expression ) . ;

    ;               shift and go to state 112


state 110

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH . RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    RIGHT_DIS       shift and go to state 113


state 111

    (37) statement -> WHILE ( expression ) statement END WHILE . ;

    ;               shift and go to state 114


state 112

    (41) statement -> expression ! ( expression , expression ) ; .

    NAME            reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    !               reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    VARIABLES       reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    STATES          reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    TRANSITIONS     reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    WHILE           reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    COMPUTATION     reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    (               reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    NUMBER          reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    IF              reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    $end            reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    END             reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    ELSE            reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    ELIF            reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)
    RIGHT_CURLY_BRA reduce using rule 41 (statement -> expression ! ( expression , expression ) ; .)


state 113

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS . NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    NAME            shift and go to state 115


state 114

    (37) statement -> WHILE ( expression ) statement END WHILE ; .

    NAME            reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    !               reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    VARIABLES       reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    STATES          reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    TRANSITIONS     reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    WHILE           reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    COMPUTATION     reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    (               reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    NUMBER          reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    IF              reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    $end            reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    END             reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    ELSE            reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    ELIF            reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)
    RIGHT_CURLY_BRA reduce using rule 37 (statement -> WHILE ( expression ) statement END WHILE ; .)


state 115

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME . LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;

    LEFT_CURLY_BRA  shift and go to state 116


state 116

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA . statement RIGHT_CURLY_BRA ;
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    statement                      shift and go to state 117
    expression                     shift and go to state 3
    if_statement                   shift and go to state 8

state 117

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement . RIGHT_CURLY_BRA ;
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . NAME ATTACHED expression ;
    (3) statement -> . expression ;
    (13) statement -> . ! expression ;
    (21) statement -> . VARIABLES expression : type ;
    (22) statement -> . VARIABLES : expression ;
    (28) statement -> . STATES NAME : state_var STATE ;
    (29) statement -> . TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ;
    (34) statement -> . if_statement END IF ;
    (35) statement -> . if_statement else_statement END IF ;
    (36) statement -> . if_statement elif_statement else_statement END IF ;
    (37) statement -> . WHILE ( expression ) statement END WHILE ;
    (39) statement -> . COMPUTATION ( expression time_unit ) ;
    (40) statement -> . expression ! ;
    (41) statement -> . expression ! ( expression , expression ) ;
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression REMAINDER expression
    (9) expression -> . expression EQUALS expression
    (10) expression -> . expression LEFT_ANGLE_BRA expression
    (11) expression -> . expression RIGHT_ANGLE_BRA expression
    (12) expression -> . expression COMP_OP expression
    (14) expression -> . ( expression )
    (15) expression -> . NUMBER
    (16) expression -> . NAME
    (17) expression -> . expression , expression
    (30) if_statement -> . IF ( expression ) statement

    RIGHT_CURLY_BRA shift and go to state 118
    NAME            shift and go to state 2
    !               shift and go to state 4
    VARIABLES       shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    WHILE           shift and go to state 10
    COMPUTATION     shift and go to state 12
    (               shift and go to state 11
    NUMBER          shift and go to state 13
    IF              shift and go to state 9

    statement                      shift and go to state 14
    expression                     shift and go to state 3
    if_statement                   shift and go to state 8

state 118

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA . ;

    ;               shift and go to state 119


state 119

    (29) statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .

    NAME            reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    !               reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    VARIABLES       reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    STATES          reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    TRANSITIONS     reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    WHILE           reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    COMPUTATION     reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    (               reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    NUMBER          reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    IF              reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    $end            reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    END             reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    ELSE            reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    ELIF            reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)
    RIGHT_CURLY_BRA reduce using rule 29 (statement -> TRANSITIONS NAME : NAME LEFT_DIS ON DISPATCH RIGHT_DIS NAME LEFT_CURLY_BRA statement RIGHT_CURLY_BRA ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NAME in state 14 resolved as shift
WARNING: shift/reduce conflict for ! in state 14 resolved as shift
WARNING: shift/reduce conflict for VARIABLES in state 14 resolved as shift
WARNING: shift/reduce conflict for STATES in state 14 resolved as shift
WARNING: shift/reduce conflict for TRANSITIONS in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for COMPUTATION in state 14 resolved as shift
WARNING: shift/reduce conflict for ( in state 14 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 46 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 46 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 46 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 46 resolved as shift
WARNING: shift/reduce conflict for , in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 47 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 47 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 47 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 47 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 47 resolved as shift
WARNING: shift/reduce conflict for , in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 48 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 48 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 48 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 48 resolved as shift
WARNING: shift/reduce conflict for , in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 49 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 49 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 49 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 49 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 49 resolved as shift
WARNING: shift/reduce conflict for , in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 50 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 50 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 50 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 50 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 50 resolved as shift
WARNING: shift/reduce conflict for , in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 51 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 51 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 51 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 51 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 51 resolved as shift
WARNING: shift/reduce conflict for , in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 52 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 52 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 52 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 52 resolved as shift
WARNING: shift/reduce conflict for , in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 53 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 53 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 53 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 53 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 53 resolved as shift
WARNING: shift/reduce conflict for , in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 54 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 54 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 54 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 54 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 54 resolved as shift
WARNING: shift/reduce conflict for , in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 55 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 55 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 55 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 55 resolved as shift
WARNING: shift/reduce conflict for , in state 55 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 63 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 93 resolved as shift
WARNING: shift/reduce conflict for COMPLETE in state 93 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 102 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for LEFT_ANGLE_BRA in state 102 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ANGLE_BRA in state 102 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 102 resolved as shift
WARNING: shift/reduce conflict for , in state 102 resolved as shift
