%type: module

module scheduler():
output prior, run_prior;
begin
  Pool_prior := [];
  Pool_now := [];
  GetMaxList := [];
  prior := -1;
  run_now := "";
  run_prior := -1;
  {
    reqProcessor_l_0_r__lb_PI_ctr_rb_?prior -->
      if (run_prior >= prior) {
        Pool_prior := push(Pool_prior,prior);
        Pool_now := push(Pool_now,"PI_ctr");
      } else {
        if (run_now != "") {
          if (run_now == "PI_ctr") {
            preempt_l_0_r__lb_PI_ctr_rb_!;
          } else if (run_now == "comp_obs_pos") {
            preempt_l_0_r__lb_comp_obs_pos_rb_!;
          } else if (run_now == "emerg") {
            preempt_l_0_r__lb_emerg_rb_!;
          } else if (run_now == "img_acq") {
            preempt_l_0_r__lb_img_acq_rb_!;
          } else if (run_now == "pan_ctr_th") {
            preempt_l_0_r__lb_pan_ctr_th_rb_!;
          } else if (run_now == "velo_voter") {
            preempt_l_0_r__lb_velo_voter_rb_!;
          }
        }
        run_now := "PI_ctr";
        run_prior := prior;
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } $
    reqProcessor_l_0_r__lb_comp_obs_pos_rb_?prior -->
      if (run_prior >= prior) {
        Pool_prior := push(Pool_prior,prior);
        Pool_now := push(Pool_now,"comp_obs_pos");
      } else {
        if (run_now != "") {
          if (run_now == "PI_ctr") {
            preempt_l_0_r__lb_PI_ctr_rb_!;
          } else if (run_now == "comp_obs_pos") {
            preempt_l_0_r__lb_comp_obs_pos_rb_!;
          } else if (run_now == "emerg") {
            preempt_l_0_r__lb_emerg_rb_!;
          } else if (run_now == "img_acq") {
            preempt_l_0_r__lb_img_acq_rb_!;
          } else if (run_now == "pan_ctr_th") {
            preempt_l_0_r__lb_pan_ctr_th_rb_!;
          } else if (run_now == "velo_voter") {
            preempt_l_0_r__lb_velo_voter_rb_!;
          }
        }
        run_now := "comp_obs_pos";
        run_prior := prior;
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } $
    reqProcessor_l_0_r__lb_emerg_rb_?prior -->
      if (run_prior >= prior) {
        Pool_prior := push(Pool_prior,prior);
        Pool_now := push(Pool_now,"emerg");
      } else {
        if (run_now != "") {
          if (run_now == "PI_ctr") {
            preempt_l_0_r__lb_PI_ctr_rb_!;
          } else if (run_now == "comp_obs_pos") {
            preempt_l_0_r__lb_comp_obs_pos_rb_!;
          } else if (run_now == "emerg") {
            preempt_l_0_r__lb_emerg_rb_!;
          } else if (run_now == "img_acq") {
            preempt_l_0_r__lb_img_acq_rb_!;
          } else if (run_now == "pan_ctr_th") {
            preempt_l_0_r__lb_pan_ctr_th_rb_!;
          } else if (run_now == "velo_voter") {
            preempt_l_0_r__lb_velo_voter_rb_!;
          }
        }
        run_now := "emerg";
        run_prior := prior;
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } $
    reqProcessor_l_0_r__lb_img_acq_rb_?prior -->
      if (run_prior >= prior) {
        Pool_prior := push(Pool_prior,prior);
        Pool_now := push(Pool_now,"img_acq");
      } else {
        if (run_now != "") {
          if (run_now == "PI_ctr") {
            preempt_l_0_r__lb_PI_ctr_rb_!;
          } else if (run_now == "comp_obs_pos") {
            preempt_l_0_r__lb_comp_obs_pos_rb_!;
          } else if (run_now == "emerg") {
            preempt_l_0_r__lb_emerg_rb_!;
          } else if (run_now == "img_acq") {
            preempt_l_0_r__lb_img_acq_rb_!;
          } else if (run_now == "pan_ctr_th") {
            preempt_l_0_r__lb_pan_ctr_th_rb_!;
          } else if (run_now == "velo_voter") {
            preempt_l_0_r__lb_velo_voter_rb_!;
          }
        }
        run_now := "img_acq";
        run_prior := prior;
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } $
    reqProcessor_l_0_r__lb_pan_ctr_th_rb_?prior -->
      if (run_prior >= prior) {
        Pool_prior := push(Pool_prior,prior);
        Pool_now := push(Pool_now,"pan_ctr_th");
      } else {
        if (run_now != "") {
          if (run_now == "PI_ctr") {
            preempt_l_0_r__lb_PI_ctr_rb_!;
          } else if (run_now == "comp_obs_pos") {
            preempt_l_0_r__lb_comp_obs_pos_rb_!;
          } else if (run_now == "emerg") {
            preempt_l_0_r__lb_emerg_rb_!;
          } else if (run_now == "img_acq") {
            preempt_l_0_r__lb_img_acq_rb_!;
          } else if (run_now == "pan_ctr_th") {
            preempt_l_0_r__lb_pan_ctr_th_rb_!;
          } else if (run_now == "velo_voter") {
            preempt_l_0_r__lb_velo_voter_rb_!;
          }
        }
        run_now := "pan_ctr_th";
        run_prior := prior;
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } $
    reqProcessor_l_0_r__lb_velo_voter_rb_?prior -->
      if (run_prior >= prior) {
        Pool_prior := push(Pool_prior,prior);
        Pool_now := push(Pool_now,"velo_voter");
      } else {
        if (run_now != "") {
          if (run_now == "PI_ctr") {
            preempt_l_0_r__lb_PI_ctr_rb_!;
          } else if (run_now == "comp_obs_pos") {
            preempt_l_0_r__lb_comp_obs_pos_rb_!;
          } else if (run_now == "emerg") {
            preempt_l_0_r__lb_emerg_rb_!;
          } else if (run_now == "img_acq") {
            preempt_l_0_r__lb_img_acq_rb_!;
          } else if (run_now == "pan_ctr_th") {
            preempt_l_0_r__lb_pan_ctr_th_rb_!;
          } else if (run_now == "velo_voter") {
            preempt_l_0_r__lb_velo_voter_rb_!;
          }
        }
        run_now := "velo_voter";
        run_prior := prior;
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } $
    free_l_0_r__lb_PI_ctr_rb_? -->
      assert("PI_ctr" == run_now);
      if (len(Pool_prior) > 0) {
        run_prior := -1;
        run_now := "";
        max_index := 0;
        idx := 0;
        {
          now_prior := 0;
          now_prior := Pool_prior[idx];
          if (now_prior > run_prior) {
            run_prior := Pool_prior[idx];
            run_now := Pool_now[idx];
            max_index := idx;
          }
          idx := idx + 1;
        }*(idx < len(Pool_prior))
        Pool_prior := del(Pool_prior,max_index);
        Pool_now := del(Pool_now,max_index);
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } else {
        run_prior := -1;
        run_now := "";
      } $
    free_l_0_r__lb_comp_obs_pos_rb_? -->
      assert("comp_obs_pos" == run_now);
      if (len(Pool_prior) > 0) {
        run_prior := -1;
        run_now := "";
        max_index := 0;
        idx := 0;
        {
          now_prior := 0;
          now_prior := Pool_prior[idx];
          if (now_prior > run_prior) {
            run_prior := Pool_prior[idx];
            run_now := Pool_now[idx];
            max_index := idx;
          }
          idx := idx + 1;
        }*(idx < len(Pool_prior))
        Pool_prior := del(Pool_prior,max_index);
        Pool_now := del(Pool_now,max_index);
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } else {
        run_prior := -1;
        run_now := "";
      } $
    free_l_0_r__lb_emerg_rb_? -->
      assert("emerg" == run_now);
      if (len(Pool_prior) > 0) {
        run_prior := -1;
        run_now := "";
        max_index := 0;
        idx := 0;
        {
          now_prior := 0;
          now_prior := Pool_prior[idx];
          if (now_prior > run_prior) {
            run_prior := Pool_prior[idx];
            run_now := Pool_now[idx];
            max_index := idx;
          }
          idx := idx + 1;
        }*(idx < len(Pool_prior))
        Pool_prior := del(Pool_prior,max_index);
        Pool_now := del(Pool_now,max_index);
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } else {
        run_prior := -1;
        run_now := "";
      } $
    free_l_0_r__lb_img_acq_rb_? -->
      assert("img_acq" == run_now);
      if (len(Pool_prior) > 0) {
        run_prior := -1;
        run_now := "";
        max_index := 0;
        idx := 0;
        {
          now_prior := 0;
          now_prior := Pool_prior[idx];
          if (now_prior > run_prior) {
            run_prior := Pool_prior[idx];
            run_now := Pool_now[idx];
            max_index := idx;
          }
          idx := idx + 1;
        }*(idx < len(Pool_prior))
        Pool_prior := del(Pool_prior,max_index);
        Pool_now := del(Pool_now,max_index);
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } else {
        run_prior := -1;
        run_now := "";
      } $
    free_l_0_r__lb_pan_ctr_th_rb_? -->
      assert("pan_ctr_th" == run_now);
      if (len(Pool_prior) > 0) {
        run_prior := -1;
        run_now := "";
        max_index := 0;
        idx := 0;
        {
          now_prior := 0;
          now_prior := Pool_prior[idx];
          if (now_prior > run_prior) {
            run_prior := Pool_prior[idx];
            run_now := Pool_now[idx];
            max_index := idx;
          }
          idx := idx + 1;
        }*(idx < len(Pool_prior))
        Pool_prior := del(Pool_prior,max_index);
        Pool_now := del(Pool_now,max_index);
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } else {
        run_prior := -1;
        run_now := "";
      } $
    free_l_0_r__lb_velo_voter_rb_? -->
      assert("velo_voter" == run_now);
      if (len(Pool_prior) > 0) {
        run_prior := -1;
        run_now := "";
        max_index := 0;
        idx := 0;
        {
          now_prior := 0;
          now_prior := Pool_prior[idx];
          if (now_prior > run_prior) {
            run_prior := Pool_prior[idx];
            run_now := Pool_now[idx];
            max_index := idx;
          }
          idx := idx + 1;
        }*(idx < len(Pool_prior))
        Pool_prior := del(Pool_prior,max_index);
        Pool_now := del(Pool_now,max_index);
        if (run_now == "PI_ctr") {
          run_l_0_r__lb_PI_ctr_rb_!;
        } else if (run_now == "comp_obs_pos") {
          run_l_0_r__lb_comp_obs_pos_rb_!;
        } else if (run_now == "emerg") {
          run_l_0_r__lb_emerg_rb_!;
        } else if (run_now == "img_acq") {
          run_l_0_r__lb_img_acq_rb_!;
        } else if (run_now == "pan_ctr_th") {
          run_l_0_r__lb_pan_ctr_th_rb_!;
        } else if (run_now == "velo_voter") {
          run_l_0_r__lb_velo_voter_rb_!;
        }
      } else {
        run_prior := -1;
        run_now := "";
      } $
    exit_l_0_r__lb_PI_ctr_rb_? -->
      idx := 0;
      del_index := 0;
      {
        now_now := "";
        now_now := Pool_now[idx];
        if (now_now == "PI_ctr") {
          del_index := idx;
        }
        idx := idx + 1;
      }*(idx < len(Pool_prior))
      Pool_prior := del(Pool_prior,del_index);
      Pool_now := del(Pool_now,del_index); $
    exit_l_0_r__lb_comp_obs_pos_rb_? -->
      idx := 0;
      del_index := 0;
      {
        now_now := "";
        now_now := Pool_now[idx];
        if (now_now == "comp_obs_pos") {
          del_index := idx;
        }
        idx := idx + 1;
      }*(idx < len(Pool_prior))
      Pool_prior := del(Pool_prior,del_index);
      Pool_now := del(Pool_now,del_index); $
    exit_l_0_r__lb_emerg_rb_? -->
      idx := 0;
      del_index := 0;
      {
        now_now := "";
        now_now := Pool_now[idx];
        if (now_now == "emerg") {
          del_index := idx;
        }
        idx := idx + 1;
      }*(idx < len(Pool_prior))
      Pool_prior := del(Pool_prior,del_index);
      Pool_now := del(Pool_now,del_index); $
    exit_l_0_r__lb_img_acq_rb_? -->
      idx := 0;
      del_index := 0;
      {
        now_now := "";
        now_now := Pool_now[idx];
        if (now_now == "img_acq") {
          del_index := idx;
        }
        idx := idx + 1;
      }*(idx < len(Pool_prior))
      Pool_prior := del(Pool_prior,del_index);
      Pool_now := del(Pool_now,del_index); $
    exit_l_0_r__lb_pan_ctr_th_rb_? -->
      idx := 0;
      del_index := 0;
      {
        now_now := "";
        now_now := Pool_now[idx];
        if (now_now == "pan_ctr_th") {
          del_index := idx;
        }
        idx := idx + 1;
      }*(idx < len(Pool_prior))
      Pool_prior := del(Pool_prior,del_index);
      Pool_now := del(Pool_now,del_index); $
    exit_l_0_r__lb_velo_voter_rb_? -->
      idx := 0;
      del_index := 0;
      {
        now_now := "";
        now_now := Pool_now[idx];
        if (now_now == "velo_voter") {
          del_index := idx;
        }
        idx := idx + 1;
      }*(idx < len(Pool_prior))
      Pool_prior := del(Pool_prior,del_index);
      Pool_now := del(Pool_now,del_index);
  }*
end
endmodule

module vehicle_imp():
output v, s, a;
begin
  v := 0;
  s := 0;
  PHY_vehicle_imp_veh_a := 0;
  PHY_vehicle_imp_veh_s := 0;
  PHY_vehicle_imp_veh_v_l := 0;
  PHY_vehicle_imp_veh_v_w := 0;
  a := 0.0;
  {
    inputs_lb_PHY_vehicle_imp_rb__lb_veh_s_rb_!s -->
      PHY_vehicle_imp_veh_s := 1; $
    inputs_lb_PHY_vehicle_imp_rb__lb_veh_v_l_rb_!v -->
      PHY_vehicle_imp_veh_v_l := 1; $
    inputs_lb_PHY_vehicle_imp_rb__lb_veh_v_w_rb_!v -->
      PHY_vehicle_imp_veh_v_w := 1;
  }*(PHY_vehicle_imp_veh_s == 0 || PHY_vehicle_imp_veh_v_l == 0 || PHY_vehicle_imp_veh_v_w == 0)
  outputs_lb_PHY_vehicle_imp_rb__lb_veh_a_rb_?a;
  {
    {v_dot = a, s_dot = v & true} |> [] (
      outputs_lb_PHY_vehicle_imp_rb__lb_veh_a_rb_?a -->
        skip;,
      inputs_lb_PHY_vehicle_imp_rb__lb_veh_s_rb_!s -->
        skip;,
      inputs_lb_PHY_vehicle_imp_rb__lb_veh_v_l_rb_!v -->
        skip;,
      inputs_lb_PHY_vehicle_imp_rb__lb_veh_v_w_rb_!v -->
        skip;
    )
  }*
end
endmodule

module camera():
output img;
begin
  {
    outputs_lb_camera_rb__lb_img_rb_!-1;
    wait(0.2);
  }*
end
endmodule

module radar():
output obs_pos_radar;
begin
  t := 0;
  data := 0.0;
  {
    if (t < 10) {
      data := 0.0;
    } else if (t < 20) {
      slope := (55 - 35) / (20 - 10);
      data := 35 + slope * (t - 10);
    } else {
      data := 0.0;
    }
    outputs_lb_radar_rb__lb_obs_pos_radar_rb_!data;
    wait(0.01);
    t := t + 0.01;
  }*
end
endmodule

module actuator():
output cmd;
begin
  {
    inputs_lb_actuator_rb__lb_cmd_rb_?cmd;
    outputs_lb_PHY_vehicle_imp_rb__lb_veh_a_rb_!cmd;
    wait(0.002);
  }*
end
endmodule

module GPS():
output data;
begin
  {
    inputs_lb_PHY_vehicle_imp_rb__lb_veh_s_rb_?data;
    outputs_lb_GPS_rb__lb_veh_pos_rb_!data;
    wait(0.006);
  }*
end
endmodule

module laser():
begin
  {
    inputs_lb_PHY_vehicle_imp_rb__lb_veh_v_l_rb_?data;
    t := 0;
    {t_dot = 1 & t < 0.01} |> [] (
      outputs_lb_laser_rb__lb_laser_valid_rb_!1.0 -->
        error := 0;
        x := data + error;
        outputs_lb_laser_rb__lb_laser_v_rb_!data + error;
    )
    {t_dot = 1 & t < 0.01}
  }*
end
endmodule

module wheel():
begin
  {
    inputs_lb_PHY_vehicle_imp_rb__lb_veh_v_w_rb_?data;
    t := 0;
    {t_dot = 1 & t < 0.01} |> [] (
      outputs_lb_wheel_rb__lb_wheel_valid_rb_!1.0 -->
        error := 0;
        x := data + error;
        outputs_lb_wheel_rb__lb_wheel_v_rb_!data + error;
    )
    {t_dot = 1 & t < 0.01}
  }*
end
endmodule

module user_panel():
begin
  outputs_lb_user_panel_rb__lb_event_rb_!"inc";
  wait(0.5);
  outputs_lb_user_panel_rb__lb_event_rb_!"inc";
  wait(0.5);
  outputs_lb_user_panel_rb__lb_event_rb_!"inc";
  wait(29);
  outputs_lb_user_panel_rb__lb_event_rb_!"dec";
  outputs_lb_user_panel_rb__lb_event_rb_!"dec";
end
endmodule

module ACT_img_acq():
begin
  {
    dis_lb_img_acq_rb_!;
    wait(0.045);
  }*
end
endmodule

module img_acq():
output image, new_image;
begin
  image := 0.0;
  skip;
  processing_state := 0;
  state := "wait";
  prior := 1;
  {
    if (state == "wait") {
      dis_lb_img_acq_rb_?;
      inputs_lb_img_acq_rb__lb_img_rb_?image;
      t := 0;
      entered := 0;
      state := "ready";
    } else if (state == "ready") {
      reqProcessor_l_0_r__lb_img_acq_rb_!prior;
      {t_dot = 1 & t < 0.045} |> [] (
        run_l_0_r__lb_img_acq_rb_? -->
          state := "running";
      )
      if (t >= 0.045 && state == "ready") {
        exit_l_0_r__lb_img_acq_rb_! -->
          state := "wait"; $
        run_l_0_r__lb_img_acq_rb_? -->
          state := "running";
      }
    } else {
      if (entered == 0) {
        c := 0;
        new_image := processing_state;
        processing_state := image;
        entered := 1;
      }
      if (entered == 1) {
        {t_dot = 1, c_dot = 1 & c < 0.01 && t < 0.045} |> [] (
          preempt_l_0_r__lb_img_acq_rb_? -->
            state := "ready";
        )
        if (state == "running") {
          if (c >= 0.01) {
            outputs_lb_img_acq_rb__lb_proc_img_rb_!new_image;
            {
              preempt_l_0_r__lb_img_acq_rb_? -->
                state := "wait"; $
              free_l_0_r__lb_img_acq_rb_! -->
                state := "wait";
            }
          } else {
            preempt_l_0_r__lb_img_acq_rb_? -->
              state := "wait"; $
            free_l_0_r__lb_img_acq_rb_! -->
              state := "wait";
          }
        }
      }
    }
  }*
end
endmodule

module ACT_comp_obs_pos():
begin
  {
    dis_lb_comp_obs_pos_rb_!;
    wait(0.097);
  }*
end
endmodule

module comp_obs_pos():
output obs_pos_radar, proc_img, obs_pos;
begin
  obs_pos_radar := 0.0;
  proc_img := 0.0;
  skip;
  x0 := 0;
  state := "wait";
  prior := 1;
  {
    if (state == "wait") {
      dis_lb_comp_obs_pos_rb_?;
      inputs_lb_comp_obs_pos_rb__lb_obs_pos_radar_rb_?obs_pos_radar;
      inputs_lb_comp_obs_pos_rb__lb_proc_img_rb_?proc_img;
      t := 0;
      entered := 0;
      state := "ready";
    } else if (state == "ready") {
      reqProcessor_l_0_r__lb_comp_obs_pos_rb_!prior;
      {t_dot = 1 & t < 0.097} |> [] (
        run_l_0_r__lb_comp_obs_pos_rb_? -->
          state := "running";
      )
      if (t >= 0.097 && state == "ready") {
        exit_l_0_r__lb_comp_obs_pos_rb_! -->
          state := "wait"; $
        run_l_0_r__lb_comp_obs_pos_rb_? -->
          state := "running";
      }
    } else {
      if (entered == 0) {
        c := 0;
        x1 := (if proc_img > 0 then proc_img else obs_pos_radar);
        x2 := (if obs_pos_radar > 0 then obs_pos_radar else proc_img);
        x3 := min(x1,x2);
        obs_pos := (if x3 > 0 then x3 else x0);
        entered := 1;
      }
      if (entered == 1) {
        {t_dot = 1, c_dot = 1 & c < 0.02 && t < 0.097} |> [] (
          preempt_l_0_r__lb_comp_obs_pos_rb_? -->
            state := "ready";
        )
        if (state == "running") {
          if (c >= 0.02) {
            outputs_lb_comp_obs_pos_rb__lb_obs_pos_rb_!obs_pos;
            {
              preempt_l_0_r__lb_comp_obs_pos_rb_? -->
                state := "wait"; $
              free_l_0_r__lb_comp_obs_pos_rb_! -->
                state := "wait";
            }
          } else {
            preempt_l_0_r__lb_comp_obs_pos_rb_? -->
              state := "wait"; $
            free_l_0_r__lb_comp_obs_pos_rb_! -->
              state := "wait";
          }
        }
      }
    }
  }*
end
endmodule

module ACT_emerg():
begin
  {
    dis_lb_emerg_rb_!;
    wait(0.005);
  }*
end
endmodule

module emerg():
output des_a, veh_v, obs_pos, veh_pos, cmd;
procedure en_emerg_imp_state begin
  skip;
end

procedure du_emerg_imp_state begin
  skip;
end

procedure ex_emerg_imp_state begin
  skip;
end

procedure entry_emerg_imp_state begin
  emerg_imp_st := "emerg_imp_state";
  @en_emerg_imp_state;
end

procedure during_emerg_imp_state begin
  emerg_imp_state_done := 0;
  if (true) {
    next_v := veh_v + des_a * period;
    next_s := veh_pos + veh_v * period + 0.5 * des_a * period * period;
    if (emerg_imp_st == "emerg_imp_state") {
      @J14_1;
      emerg_imp_state_done := emerg_imp_ret;
    }
  }
  if (emerg_imp_st == "emerg_imp_state" && emerg_imp_state_done == 0) {
    @du_emerg_imp_state;
  }
  emerg_imp_ret := emerg_imp_state_done;
end

procedure exit_emerg_imp_state begin
  @ex_emerg_imp_state;
  if (emerg_imp_st == "emerg_imp_state") {
    emerg_imp_st := "";
  }
end

procedure en_emerg_imp begin
  skip;
end

procedure du_emerg_imp begin
  skip;
end

procedure ex_emerg_imp begin
  skip;
end

procedure entry_emerg_imp begin
  @en_emerg_imp;
end

procedure during_emerg_imp begin
  emerg_imp_done := 0;
  if (emerg_imp_done == 0) {
    @du_emerg_imp;
  }
  emerg_imp_ret := emerg_imp_done;
end

procedure exit_emerg_imp begin
  @ex_emerg_imp;
  if (true) {
    skip;
  }
end

procedure J14_1 begin
  J14_done := 0;
  distance := obs_pos - next_s;
  max_d := max_v * max_v / -(2 * min_a);
  if (obs_pos <= 0 || distance >= max_d) {
    v_lim := max_v;
  } else {
    if (distance >= 0) {
      v_lim := sqrt(-(2 * min_a * distance));
    } else {
      v_lim := 0;
    }
  }
  if (next_v <= v_lim) {
    if (emerg_imp_st == "emerg_imp_state") {
      @exit_emerg_imp_state;
    }
    cmd := des_a;
    if (emerg_imp_st == "" && true) {
      @entry_emerg_imp_state;
    }
    emerg_imp_ret := 1;
    J14_done := emerg_imp_ret;
  }
  if (J14_done == 0) {
    next_s := veh_pos + veh_v * period;
    @J20_1;
    J14_done := emerg_imp_ret;
  }
  emerg_imp_ret := J14_done;
end

procedure J20_1 begin
  J20_done := 0;
  distance := obs_pos - next_s;
  max_d := max_v * max_v / -(2 * min_a);
  if (obs_pos <= 0 || distance >= max_d) {
    v_lim := max_v;
  } else {
    if (distance >= 0) {
      v_lim := sqrt(-(2 * min_a * distance));
    } else {
      v_lim := 0;
    }
  }
  if (veh_v <= v_lim) {
    if (emerg_imp_st == "emerg_imp_state") {
      @exit_emerg_imp_state;
    }
    cmd := 0;
    if (emerg_imp_st == "" && true) {
      @entry_emerg_imp_state;
    }
    emerg_imp_ret := 1;
    J20_done := emerg_imp_ret;
  }
  if (J20_done == 0) {
    if (emerg_imp_st == "emerg_imp_state") {
      @exit_emerg_imp_state;
    }
    cmd := min_a;
    if (emerg_imp_st == "" && true) {
      @entry_emerg_imp_state;
    }
    emerg_imp_ret := 1;
    J20_done := emerg_imp_ret;
  }
  emerg_imp_ret := J20_done;
end

procedure init_emerg_imp begin
  emerg_impEL := [];
  max_v := 10;
  min_a := -3;
  period := 1;
  cmd := 0;
  next_v := 0;
  next_s := 0;
  emerg_imp_st := "";
  @entry_emerg_imp;
  @entry_emerg_imp_state;
end

procedure exec_emerg_imp begin
  @during_emerg_imp;
  if (emerg_imp_ret == 0) {
    if (emerg_imp_st == "emerg_imp_state") {
      @during_emerg_imp_state;
    }
  }
end

begin
  des_a := 0.0;
  veh_v := 0.0;
  obs_pos := 0.0;
  veh_pos := 0.0;
  @init_emerg_imp;
  state := "wait";
  prior := 2;
  {
    if (state == "wait") {
      dis_lb_emerg_rb_?;
      inputs_lb_emerg_rb__lb_des_a_rb_?des_a;
      inputs_lb_emerg_rb__lb_veh_v_rb_?veh_v;
      inputs_lb_emerg_rb__lb_obs_pos_rb_?obs_pos;
      inputs_lb_emerg_rb__lb_veh_pos_rb_?veh_pos;
      t := 0;
      entered := 0;
      state := "ready";
    } else if (state == "ready") {
      reqProcessor_l_0_r__lb_emerg_rb_!prior;
      {t_dot = 1 & t < 0.005} |> [] (
        run_l_0_r__lb_emerg_rb_? -->
          state := "running";
      )
      if (t >= 0.005 && state == "ready") {
        exit_l_0_r__lb_emerg_rb_! -->
          state := "wait"; $
        run_l_0_r__lb_emerg_rb_? -->
          state := "running";
      }
    } else {
      if (entered == 0) {
        c := 0;
        @exec_emerg_imp;
        entered := 1;
      }
      if (entered == 1) {
        {t_dot = 1, c_dot = 1 & c < 0.001 && t < 0.005} |> [] (
          preempt_l_0_r__lb_emerg_rb_? -->
            state := "ready";
        )
        if (state == "running") {
          if (c >= 0.001) {
            outputs_lb_emerg_rb__lb_cmd_rb_!cmd;
            {
              preempt_l_0_r__lb_emerg_rb_? -->
                state := "wait"; $
              free_l_0_r__lb_emerg_rb_! -->
                state := "wait";
            }
          } else {
            preempt_l_0_r__lb_emerg_rb_? -->
              state := "wait"; $
            free_l_0_r__lb_emerg_rb_! -->
              state := "wait";
          }
        }
      }
    }
  }*
end
endmodule

module ACT_velo_voter():
begin
  {
    dis_lb_velo_voter_rb_!;
    wait(0.008);
  }*
end
endmodule

module velo_voter():
output wheel_v, laser_v, veh_v;
begin
  wheel_v := 0.0;
  wheel_valid := -1.0;
  laser_v := 0.0;
  laser_valid := -1.0;
  x3 := 2;
  state := "wait";
  prior := 1;
  {
    if (state == "wait") {
      dis_lb_velo_voter_rb_?;
      inputs_lb_velo_voter_rb__lb_wheel_v_rb_?wheel_v;
      inputs_lb_velo_voter_rb__lb_wheel_valid_rb_?wheel_valid;
      inputs_lb_velo_voter_rb__lb_laser_v_rb_?laser_v;
      inputs_lb_velo_voter_rb__lb_laser_valid_rb_?laser_valid;
      t := 0;
      entered := 0;
      state := "ready";
    } else if (state == "ready") {
      reqProcessor_l_0_r__lb_velo_voter_rb_!prior;
      {t_dot = 1 & t < 0.008} |> [] (
        run_l_0_r__lb_velo_voter_rb_? -->
          state := "running";
      )
      if (t >= 0.008 && state == "ready") {
        exit_l_0_r__lb_velo_voter_rb_! -->
          state := "wait"; $
        run_l_0_r__lb_velo_voter_rb_? -->
          state := "running";
      }
    } else {
      if (entered == 0) {
        c := 0;
        x0 := (if wheel_valid > 0 then wheel_v else laser_v);
        x1 := (if laser_valid > 0 then laser_v else wheel_v);
        x2 := x0 + x1;
        veh_v := x2 / x3;
        entered := 1;
      }
      if (entered == 1) {
        {t_dot = 1, c_dot = 1 & c < 0.001 && t < 0.008} |> [] (
          preempt_l_0_r__lb_velo_voter_rb_? -->
            state := "ready";
        )
        if (state == "running") {
          if (c >= 0.001) {
            outputs_lb_velo_voter_rb__lb_veh_v_rb_!veh_v;
            {
              preempt_l_0_r__lb_velo_voter_rb_? -->
                state := "wait"; $
              free_l_0_r__lb_velo_voter_rb_! -->
                state := "wait";
            }
          } else {
            preempt_l_0_r__lb_velo_voter_rb_? -->
              state := "wait"; $
            free_l_0_r__lb_velo_voter_rb_! -->
              state := "wait";
          }
        }
      }
    }
  }*
end
endmodule

module pan_ctr_th():
output des_v;
procedure en_pan_ctr_th_imp_update begin
  skip;
end

procedure du_pan_ctr_th_imp_update begin
  skip;
end

procedure ex_pan_ctr_th_imp_update begin
  skip;
end

procedure entry_pan_ctr_th_imp_update begin
  pan_ctr_th_imp_st := "pan_ctr_th_imp_update";
  @en_pan_ctr_th_imp_update;
end

procedure during_pan_ctr_th_imp_update begin
  pan_ctr_th_imp_update_done := 0;
  if (len(pan_ctr_th_impEL) != 0 && top(pan_ctr_th_impEL) == "inc") {
    skip;
    if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update") {
      if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update") {
        @exit_pan_ctr_th_imp_update;
      }
      des_v := des_v + 1;
      if (pan_ctr_th_imp_st == "" && true) {
        @entry_pan_ctr_th_imp_update;
      }
      pan_ctr_th_imp_ret := 1;
      pan_ctr_th_imp_update_done := pan_ctr_th_imp_ret;
    }
  }
  if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update" && pan_ctr_th_imp_update_done == 0 && len(pan_ctr_th_impEL) != 0 && top(pan_ctr_th_impEL) == "dec") {
    skip;
    if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update") {
      if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update") {
        @exit_pan_ctr_th_imp_update;
      }
      des_v := des_v - 1;
      if (pan_ctr_th_imp_st == "" && true) {
        @entry_pan_ctr_th_imp_update;
      }
      pan_ctr_th_imp_ret := 1;
      pan_ctr_th_imp_update_done := pan_ctr_th_imp_ret;
    }
  }
  if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update" && pan_ctr_th_imp_update_done == 0) {
    @du_pan_ctr_th_imp_update;
  }
  pan_ctr_th_imp_ret := pan_ctr_th_imp_update_done;
end

procedure exit_pan_ctr_th_imp_update begin
  @ex_pan_ctr_th_imp_update;
  if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update") {
    pan_ctr_th_imp_st := "";
  }
end

procedure en_pan_ctr_th_imp begin
  skip;
end

procedure du_pan_ctr_th_imp begin
  skip;
end

procedure ex_pan_ctr_th_imp begin
  skip;
end

procedure entry_pan_ctr_th_imp begin
  @en_pan_ctr_th_imp;
end

procedure during_pan_ctr_th_imp begin
  pan_ctr_th_imp_done := 0;
  if (pan_ctr_th_imp_done == 0) {
    @du_pan_ctr_th_imp;
  }
  pan_ctr_th_imp_ret := pan_ctr_th_imp_done;
end

procedure exit_pan_ctr_th_imp begin
  @ex_pan_ctr_th_imp;
  if (true) {
    skip;
  }
end

procedure init_pan_ctr_th_imp begin
  pan_ctr_th_impEL := [];
  des_v := 0;
  pan_ctr_th_imp_st := "";
  @entry_pan_ctr_th_imp;
  des_v := 0;
  @entry_pan_ctr_th_imp_update;
end

procedure exec_pan_ctr_th_imp begin
  @during_pan_ctr_th_imp;
  if (pan_ctr_th_imp_ret == 0) {
    if (pan_ctr_th_imp_st == "pan_ctr_th_imp_update") {
      @during_pan_ctr_th_imp_update;
    }
  }
end

begin
  event := " ";
  skip;
  @init_pan_ctr_th_imp;
  state := "wait";
  prior := 0;
  {
    if (state == "wait") {
      dis_lb_pan_ctr_th_rb__lb_event_rb_?event;
      t := 0;
      entered := 0;
      state := "ready";
    } else if (state == "ready") {
      reqProcessor_l_0_r__lb_pan_ctr_th_rb_!prior;
      {t_dot = 1 & t < 0.1} |> [] (
        run_l_0_r__lb_pan_ctr_th_rb_? -->
          state := "running";
      )
      if (t >= 0.1 && state == "ready") {
        exit_l_0_r__lb_pan_ctr_th_rb_! -->
          state := "wait"; $
        run_l_0_r__lb_pan_ctr_th_rb_? -->
          state := "running";
      }
    } else {
      if (entered == 0) {
        c := 0;
        pan_ctr_th_impEL := push(pan_ctr_th_impEL,event);
        @exec_pan_ctr_th_imp;
        pan_ctr_th_impEL := pop(pan_ctr_th_impEL);
        entered := 1;
      }
      if (entered == 1) {
        {t_dot = 1, c_dot = 1 & c < 0.005 && t < 0.1} |> [] (
          preempt_l_0_r__lb_pan_ctr_th_rb_? -->
            state := "ready";
        )
        if (state == "running") {
          if (c >= 0.005) {
            outputs_lb_pan_ctr_th_rb__lb_des_v_rb_!des_v;
            {
              preempt_l_0_r__lb_pan_ctr_th_rb_? -->
                state := "wait"; $
              free_l_0_r__lb_pan_ctr_th_rb_! -->
                state := "wait";
            }
          } else {
            preempt_l_0_r__lb_pan_ctr_th_rb_? -->
              state := "wait"; $
            free_l_0_r__lb_pan_ctr_th_rb_! -->
              state := "wait";
          }
        }
      }
    }
  }*
end
endmodule

module tran_img():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_camera_rb__lb_img_rb_?data -->
        skip;,
      inputs_lb_img_acq_rb__lb_img_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_obs_pos_radar():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_radar_rb__lb_obs_pos_radar_rb_?data -->
        skip;,
      inputs_lb_comp_obs_pos_rb__lb_obs_pos_radar_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_cmd():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_emerg_rb__lb_cmd_rb_?data -->
        skip;,
      inputs_lb_actuator_rb__lb_cmd_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_veh_pos():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_GPS_rb__lb_veh_pos_rb_?data -->
        skip;,
      inputs_lb_emerg_rb__lb_veh_pos_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_laser_valid():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_laser_rb__lb_laser_valid_rb_?data -->
        skip;,
      inputs_lb_velo_voter_rb__lb_laser_valid_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_laser_v():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_laser_rb__lb_laser_v_rb_?data -->
        skip;,
      inputs_lb_velo_voter_rb__lb_laser_v_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_wheel_valid():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_wheel_rb__lb_wheel_valid_rb_?data -->
        skip;,
      inputs_lb_velo_voter_rb__lb_wheel_valid_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_wheel_v():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_wheel_rb__lb_wheel_v_rb_?data -->
        skip;,
      inputs_lb_velo_voter_rb__lb_wheel_v_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_event():
begin
  event := "";
  queue := [];
  {
    if (len(queue) == 0) {
      outputs_lb_user_panel_rb__lb_event_rb_?event;
      queue := push(queue,event);
    } else {
      outputs_lb_user_panel_rb__lb_event_rb_?event -->
        queue := push(queue,event); $
      dis_lb_pan_ctr_th_rb__lb_event_rb_!bottom(queue) -->
        queue := get(queue);
    }
  }*
end
endmodule

module tran_des_v():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_pan_ctr_th_rb__lb_des_v_rb_?data -->
        skip;,
      inputs_lb_PI_ctr_rb__lb_des_v_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_proc_img():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_img_acq_rb__lb_proc_img_rb_?data -->
        skip;,
      inputs_lb_comp_obs_pos_rb__lb_proc_img_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_obs_pos():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_comp_obs_pos_rb__lb_obs_pos_rb_?data -->
        skip;,
      inputs_lb_emerg_rb__lb_obs_pos_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_veh_v():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_velo_voter_rb__lb_veh_v_rb_?data -->
        skip;,
      inputs_lb_emerg_rb__lb_veh_v_rb_!data -->
        skip;,
      inputs_lb_PI_ctr_rb__lb_veh_v_rb_!data -->
        skip;
    )
  }*
end
endmodule

module tran_des_a():
begin
  x := 0;
  data := 0.0;
  {
    {x_dot = 0 & true} |> [] (
      outputs_lb_PI_ctr_rb__lb_des_a_rb_?data -->
        skip;,
      inputs_lb_emerg_rb__lb_des_a_rb_!data -->
        skip;
    )
  }*
end
endmodule

module ACT_PI_ctr():
begin
  {
    dis_lb_PI_ctr_rb_!;
    wait(0.007);
  }*
end
endmodule

module PI_ctr():
output des_v, veh_v, des_a;
begin
  des_v := 0.0;
  veh_v := 0.0;
  Integrator_DSTATE := 0;
  state := "wait";
  prior := 1;
  {
    if (state == "wait") {
      dis_lb_PI_ctr_rb_?;
      inputs_lb_PI_ctr_rb__lb_des_v_rb_?des_v;
      inputs_lb_PI_ctr_rb__lb_veh_v_rb_?veh_v;
      t := 0;
      entered := 0;
      state := "ready";
    } else if (state == "ready") {
      reqProcessor_l_0_r__lb_PI_ctr_rb_!prior;
      {t_dot = 1 & t < 0.007} |> [] (
        run_l_0_r__lb_PI_ctr_rb_? -->
          state := "running";
      )
      if (t >= 0.007 && state == "ready") {
        exit_l_0_r__lb_PI_ctr_rb_! -->
          state := "wait"; $
        run_l_0_r__lb_PI_ctr_rb_? -->
          state := "running";
      }
    } else {
      if (entered == 0) {
        c := 0;
        x0 := des_v - veh_v;

          rtb_Sum := x0;
          rtb_IntegralGain := rtb_Sum * 1;
          rtb_Sum := rtb_Sum * 1;
          rtb_SumFdbk := rtb_Sum + Integrator_DSTATE;
          if (rtb_SumFdbk > 3) {
            rtb_SumFdbk_0 := 3;
          } else if (rtb_SumFdbk < -3) {
            rtb_SumFdbk_0 := -3;
          } else {
            rtb_SumFdbk_0 := rtb_SumFdbk;
          }
          rtb_IntegralGain := ((rtb_SumFdbk_0 - rtb_SumFdbk) * 1 + rtb_IntegralGain) * 0.007 + Integrator_DSTATE;
          rtb_Sum := rtb_Sum + rtb_IntegralGain;
          if (rtb_Sum > 3) {
            des_a := 3;
          } else if (rtb_Sum < -3) {
            des_a := -3;
          } else {
            des_a := rtb_Sum;
          }
          Integrator_DSTATE := rtb_IntegralGain;

        entered := 1;
      }
      if (entered == 1) {
        {t_dot = 1, c_dot = 1 & c < 0.001 && t < 0.007} |> [] (
          preempt_l_0_r__lb_PI_ctr_rb_? -->
            state := "ready";
        )
        if (state == "running") {
          if (c >= 0.001) {
            outputs_lb_PI_ctr_rb__lb_des_a_rb_!des_a;
            {
              preempt_l_0_r__lb_PI_ctr_rb_? -->
                state := "wait"; $
              free_l_0_r__lb_PI_ctr_rb_! -->
                state := "wait";
            }
          } else {
            preempt_l_0_r__lb_PI_ctr_rb_? -->
              state := "wait"; $
            free_l_0_r__lb_PI_ctr_rb_! -->
              state := "wait";
          }
        }
      }
    }
  }*
end
endmodule

system
scheduler() ||
vehicle_imp() ||
camera() ||
radar() ||
actuator() ||
GPS() ||
laser() ||
wheel() ||
user_panel() ||
ACT_img_acq() ||
img_acq() ||
ACT_comp_obs_pos() ||
comp_obs_pos() ||
ACT_emerg() ||
emerg() ||
ACT_velo_voter() ||
velo_voter() ||
pan_ctr_th() ||
tran_img() ||
tran_obs_pos_radar() ||
tran_cmd() ||
tran_veh_pos() ||
tran_laser_valid() ||
tran_laser_v() ||
tran_wheel_valid() ||
tran_wheel_v() ||
tran_event() ||
tran_des_v() ||
tran_proc_img() ||
tran_obs_pos() ||
tran_veh_v() ||
tran_des_a() ||
ACT_PI_ctr() ||
PI_ctr()
endsystem
