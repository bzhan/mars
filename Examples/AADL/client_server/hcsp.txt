clientserver ::= @myprocess || @myplatform
myprocess ::= @clientT || @serverT || @Comms_myprocess
serverT ::= @op1 || @op2
Comms_myprocess ::= @myprocess_Conn_0 || @myprocess_Conn_1 || @myprocess_Conn_2 || @myprocess_Conn_3
myprocess_Conn_0 ::= (myprocess_serverT_aser?x; myprocess_clientT_non_blocking!x)**
myprocess_Conn_1 ::= (myprocess_serverT_hser?x; myprocess_clientT_blocking!x)**
myprocess_Conn_2 ::= (myprocess_serverT_op1?x; myprocess_clientT_non_blocking!x)**
myprocess_Conn_3 ::= (myprocess_serverT_op2?x; myprocess_clientT_blocking!x)**
clientT ::= @ACT_clientT || @COM_clientT || @ANNEX_clientT
ACT_clientT ::= (act_clientT!; wait(0.02))**
COM_clientT ::= state := "dispatch"; (if state == "dispatch" then act_clientT?; t := 0; InitFlag := 0; state := "ready" elif state == "ready" then ready_clientT!; <t_dot = 1 & t < 0.0> |> [] (run_clientT? --> state := "running"); t == 0.0 -> state := "dispatch" else InitFlag == 0 -> (c := 0; run_Annex_clientT!; <t_dot = 1, c_dot = 1 & c < 0.006 && t < 0.0> |> [] (complete_Annex_clientT? --> clientT_annex_result?result; skip; InitFlag := 1, busy_Annex_clientT? --> state := "ready")); InitFlag == 1 -> (<t_dot = 1, c_dot = 1 & c < 0.006 && t < 0.0> |> [] (busy_clientT? --> state := "ready"); t == 0.0 -> (free!; state := "dispatch"); c == 0.006 -> (myprocess_clientT_result!result; free!; state := "dispatch")) endif)**
ANNEX_clientT ::= run_Annex_clientT?; v := 1.0; result := v; <t_dot = 1 & t < 0.001> |> [] (busy_clientT? --> busy_Annex_clientT!; run_Annex_clientT?); clientT_non_blocking!; <t_dot = 1 & t < 0.001> |> [] (busy_clientT? --> busy_Annex_clientT!; run_Annex_clientT?); clientT_blocking!v; apply_Resource_clientT!; clientT_blocking?result; <t_dot = 1 & t < 0.002> |> [] (busy_clientT? --> busy_Annex_clientT!; run_Annex_clientT?); complete_Annex_clientT!; clientT_annex_result!result
SCHEDULE_myprocess ::= run_queue := []; run_now := 0; (ready_clientT? --> run_queue := push(run_queue, "clientT") $ ready_serverT? --> run_queue := push(run_queue, "serverT") $ free? --> ready_num := len(run_queue); ready_num == 0 -> run_now := 0; ready_num > 0 -> (run_now := bottom(run_queue); run_now == "clientT" -> run_clientT!; run_now == "serverT" -> run_serverT!))**
serverT ::= @ACT_serverT || @COM_serverT
ACT_serverT ::= (act_serverT!; wait(0.01))**
COM_serverT ::= state := "dispatch"; (if state == "dispatch" then act_serverT?; t := 0; InitFlag := 0; state := "ready" elif state == "ready" then ready_serverT!; <t_dot = 1 & t < 0.0> |> [] (run_serverT? --> state := "running"); t == 0.0 -> state := "dispatch" else InitFlag == 1 -> (<t_dot = 1, c_dot = 1 & c < 0.001 && t < 0.0> |> [] (busy_serverT? --> state := "ready"); t == 0.0 -> (free!; state := "dispatch"); c == 0.001 -> (free!; state := "dispatch")) endif)**