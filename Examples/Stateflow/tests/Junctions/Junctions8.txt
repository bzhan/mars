%type: module

module Chart():
begin
  ChartEL := [];
  x := 1;
  Chart_st := "Chart_A";
  s := "enA";
  log("enA" + "\n");
  (
    Chart_ret := 0;
    if Chart_st == "Chart_A" then
      Chart_A_done := 0;
      x >= 1 -> (
        s := "ca1";
        log("ca1" + "\n");
        Chart_st == "Chart_A" -> (
          s := "exA";
          log("exA" + "\n");
          Chart_st == "Chart_A" -> Chart_st := "";
          Chart_st == "" -> (
            Chart_st := "Chart_C";
            s := "enC";
            log("enC" + "\n")
          );
          Chart_A_done := 1
        )
      );
      Chart_st == "Chart_A" && Chart_A_done == 0 -> (
        s := "duA";
        log("duA" + "\n")
      );
      Chart_st == "Chart_A" && Chart_A_done == 0 -> (
        s := "ca2";
        log("ca2" + "\n");
        Chart_st == "Chart_A" -> (
          s := "exA";
          log("exA" + "\n");
          Chart_st == "Chart_A" -> Chart_st := "";
          Chart_st == "" -> (
            Chart_st := "Chart_C";
            s := "enC";
            log("enC" + "\n")
          );
          Chart_A_done := 1
        )
      );
      Chart_ret := Chart_A_done
    elif Chart_st == "Chart_C" then
      Chart_C_done := 0;
      x := 0;
      Chart_st == "Chart_C" -> (
        s := "exC";
        log("exC" + "\n");
        Chart_st == "Chart_C" -> Chart_st := "";
        Chart_st == "" -> (
          Chart_st := "Chart_A";
          s := "enA";
          log("enA" + "\n")
        );
        Chart_C_done := 1
      );
      Chart_ret := Chart_C_done
    else
      skip
    endif;
    wait(0.1)
  )**
end
endmodule
system
Chart = Chart()
endsystem
